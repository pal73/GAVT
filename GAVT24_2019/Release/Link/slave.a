;#define NUM_OF_SLAVE	3
;
;#define HOST_MESS_LEN	4
;
;
;
;#define MD1	3
;#define MD2	7
;#define VR1	2
;#define VR2	6
;
;#define PP1_1	6
;#define PP1_2	7
;#define PP1_3	5
;#define PP1_4	4
;#define PP2_1	3
;#define PP2_2	2
;#define PP2_3	1
;#define PP2_4	0
;
;
;bit b600Hz;
;bit b100Hz;
;bit b10Hz;
;char t0_cnt0_,t0_cnt0,t0_cnt1,t0_cnt2,t0_cnt3;
;char ind_cnt;
;
;char ind_out[5]={0x255,0x255,0x255,0x255,0x255};

	.DSEG
;char dig[4];
;bit bZ;
;char but;
;static char but_n;
;static char but_s;
;static char but0_cnt;
;static char but1_cnt;
;static char but_onL_temp;
;bit l_but;		//идет длинное нажатие на кнопку
;bit n_but;          //произошло нажатие
;bit speed;		//разрешение ускорения перебора
;bit bFL2;
;bit bFL5;
;eeprom enum{eamON=0x55,eamOFF=0xaa}ee_avtom_mode;
;enum {p1=1,p2=2,p3=3,p4=4}prog;
;//enum{sOFF=0,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16,s100}step=sOFF;
;
;char sub_ind;
;char in_word,in_word_old,in_word_new,in_word_cnt;
;bit bERR;
;signed int cnt_del=0;
;
;char cnt_md1,cnt_md2,cnt_vr1,cnt_vr2;
;
;eeprom enum {coOFF=0x55,coON=0xaa}ch_on[6];
;eeprom unsigned ee_timer1_delay;
;bit opto_angle_old;
;enum {msON=0x55,msOFF=0xAA}motor_state;
;unsigned timer1_delay;
;
;char stop_cnt,start_cnt;
;char cnt_net_drv,cnt_drv;
;char cmnd_byte,state_byte,crc_byte;
;
;enum{sOFF,s1,s2,s3,s4,s5,s6,s7,s8,s9,s10,s11,s12,s13,s14,s15,s16}step1=sOFF,step2=sOFF;
;enum {mON,mOFF}mode1,mode2;
;signed char cnt_del1,cnt_del2;
;
;bit bVR1,bVR2;
;bit bMD1,bMD2;
;char out_stat,out_stat1,out_stat2;
;char cmnd_new,cmnd_old,cmnd,cmnd_cnt;
;char state_new,state_old,state,state_cnt;
;
;#include <mega32.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;#include <stdio.h>
;#include "usart_slave.c"
;#define RXB8 1
;#define TXB8 0
;#define UPE 2
;#define OVR 3
;#define FE 4
;#define UDRE 5
;#define RXC 7
;
;#define FRAMING_ERROR (1<<FE)
;#define PARITY_ERROR (1<<UPE)
;#define DATA_OVERRUN (1<<OVR)
;#define DATA_REGISTER_EMPTY (1<<UDRE)
;#define RX_COMPLETE (1<<RXC)
;
;extern void uart_in_an(void);
;
;// USART Receiver buffer
;#define RX_BUFFER_SIZE 50
;bit bRXIN;
;char UIB[10]={0,0,0,0,0,0,0,0,0,0};
;char flag;
;char rx_buffer[RX_BUFFER_SIZE];
;unsigned char rx_wr_index,rx_rd_index,rx_counter;
;// This flag is set on USART Receiver buffer overflow
;bit rx_buffer_overflow;
;
;// USART Receiver interrupt service routine
;#pragma savereg-
;interrupt [USART_RXC] void uart_rx_isr(void)
; 0000 004B {

	.CSEG
;PCODE: $0000000D VOL: 0
;char status,data;
;#asm
;PCODE: $0000000E VOL: 0
;PCODE: $0000000F VOL: 0
;	status -> R17
;	data -> R16
;PCODE: $00000010 VOL: 0
    push r26
;PCODE: $00000011 VOL: 0
    push r27
;PCODE: $00000012 VOL: 0
    push r30
;PCODE: $00000013 VOL: 0
    push r31
;PCODE: $00000014 VOL: 0
    in   r26,sreg
;PCODE: $00000015 VOL: 0
    push r26
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
;status=UCSRA;
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;data=UDR;
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
;if ((status & (FRAMING_ERROR | PARITY_ERROR | DATA_OVERRUN))==0)
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;   {
;
;   if((data&0b11111000)==0)rx_wr_index=0;
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;   rx_buffer[rx_wr_index]=data;
;PCODE: $00000024 VOL: 0
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;PCODE: $00000028 VOL: 0
;   if (++rx_wr_index >= HOST_MESS_LEN)
;PCODE: $00000029 VOL: 0
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
;   	{
;   	if((((rx_buffer[0]^rx_buffer[1])^(rx_buffer[2]^rx_buffer[3]))&0b01111111)==0)
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;PCODE: $00000031 VOL: 0
;PCODE: $00000032 VOL: 0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
;   		{
;   		uart_in_an();
;PCODE: $0000003C VOL: 0
;   		}
;     }
;PCODE: $0000003D VOL: 0
;   if (rx_wr_index >= RX_BUFFER_SIZE) rx_wr_index=0;
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
;PCODE: $00000043 VOL: 0
;   };
;PCODE: $00000044 VOL: 0
;PCODE: $00000045 VOL: 0
;#asm
;PCODE: $00000046 VOL: 0
    pop  r26
;PCODE: $00000047 VOL: 0
    out  sreg,r26
;PCODE: $00000048 VOL: 0
    pop  r31
;PCODE: $00000049 VOL: 0
    pop  r30
;PCODE: $0000004A VOL: 0
    pop  r27
;PCODE: $0000004B VOL: 0
    pop  r26
;PCODE: $0000004C VOL: 0
;PCODE: $0000004D VOL: 0
;}
;PCODE: $0000004E VOL: 0
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
;#pragma savereg+
;
;#ifndef _DEBUG_TERMINAL_IO_
;// Get a character from the USART Receiver buffer
;#define _ALTERNATE_GETCHAR_
;#pragma used+
;char getchar(void)
;{
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
;char data;
;while (rx_counter==0);
;PCODE: $00000053 VOL: 0
;	data -> R17
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
;data=rx_buffer[rx_rd_index];
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
;if (++rx_rd_index == RX_BUFFER_SIZE) rx_rd_index=0;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
;PCODE: $00000063 VOL: 0
;PCODE: $00000064 VOL: 0
;#asm("cli")
;PCODE: $00000065 VOL: 0
;PCODE: $00000066 VOL: 0
	cli
;PCODE: $00000067 VOL: 0
;--rx_counter;
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;#asm("sei")
;PCODE: $0000006B VOL: 0
	sei
;PCODE: $0000006C VOL: 0
;return data;
;PCODE: $0000006D VOL: 0
;PCODE: $0000006E VOL: 0
;PCODE: $0000006F VOL: 0
;}
;PCODE: $00000070 VOL: 0
;#pragma used-
;#endif
;
;// USART Transmitter buffer
;#define TX_BUFFER_SIZE 100
;char tx_buffer[TX_BUFFER_SIZE];
;unsigned char tx_wr_index,tx_rd_index,tx_counter;
;
;// USART Transmitter interrupt service routine
;#pragma savereg-
;interrupt [USART_TXC] void uart_tx_isr(void)
;{
;PCODE: $00000071 VOL: 0
;#asm
;PCODE: $00000072 VOL: 0
    push r26
;PCODE: $00000073 VOL: 0
    push r27
;PCODE: $00000074 VOL: 0
    push r30
;PCODE: $00000075 VOL: 0
    push r31
;PCODE: $00000076 VOL: 0
    in   r26,sreg
;PCODE: $00000077 VOL: 0
    push r26
;PCODE: $00000078 VOL: 0
;PCODE: $00000079 VOL: 0
;if (tx_counter)
;PCODE: $0000007A VOL: 0
;PCODE: $0000007B VOL: 0
;PCODE: $0000007C VOL: 0
;   {
;   --tx_counter;
;PCODE: $0000007D VOL: 0
;PCODE: $0000007E VOL: 0
;PCODE: $0000007F VOL: 0
;   UDR=tx_buffer[tx_rd_index];
;PCODE: $00000080 VOL: 0
;PCODE: $00000081 VOL: 0
;PCODE: $00000082 VOL: 0
;PCODE: $00000083 VOL: 0
;PCODE: $00000084 VOL: 0
;   if (++tx_rd_index == TX_BUFFER_SIZE) tx_rd_index=0;
;PCODE: $00000085 VOL: 0
;PCODE: $00000086 VOL: 0
;PCODE: $00000087 VOL: 0
;PCODE: $00000088 VOL: 0
;PCODE: $00000089 VOL: 0
;PCODE: $0000008A VOL: 0
;PCODE: $0000008B VOL: 0
;   };
;PCODE: $0000008C VOL: 0
;PCODE: $0000008D VOL: 0
;#asm
;PCODE: $0000008E VOL: 0
    pop  r26
;PCODE: $0000008F VOL: 0
    out  sreg,r26
;PCODE: $00000090 VOL: 0
    pop  r31
;PCODE: $00000091 VOL: 0
    pop  r30
;PCODE: $00000092 VOL: 0
    pop  r27
;PCODE: $00000093 VOL: 0
    pop  r26
;PCODE: $00000094 VOL: 0
;PCODE: $00000095 VOL: 0
;}
;PCODE: $00000096 VOL: 0
;PCODE: $00000097 VOL: 0
;#pragma savereg+
;
;#ifndef _DEBUG_TERMINAL_IO_
;// Write a character to the USART Transmitter buffer
;#define _ALTERNATE_PUTCHAR_
;#pragma used+
;void putchar(char c)
;{
;PCODE: $00000098 VOL: 0
;PCODE: $00000099 VOL: 0
;while (tx_counter == TX_BUFFER_SIZE);
;PCODE: $0000009A VOL: 0
;	c -> Y+0
;PCODE: $0000009B VOL: 0
;PCODE: $0000009C VOL: 0
;PCODE: $0000009D VOL: 0
;PCODE: $0000009E VOL: 0
;PCODE: $0000009F VOL: 0
;PCODE: $000000A0 VOL: 0
;#asm("cli")
;PCODE: $000000A1 VOL: 0
	cli
;PCODE: $000000A2 VOL: 0
;if (tx_counter || ((UCSRA & DATA_REGISTER_EMPTY)==0))
;PCODE: $000000A3 VOL: 0
;PCODE: $000000A4 VOL: 0
;PCODE: $000000A5 VOL: 0
;PCODE: $000000A6 VOL: 0
;PCODE: $000000A7 VOL: 0
;PCODE: $000000A8 VOL: 0
;PCODE: $000000A9 VOL: 0
;PCODE: $000000AA VOL: 0
;   {
;   tx_buffer[tx_wr_index]=c;
;PCODE: $000000AB VOL: 0
;PCODE: $000000AC VOL: 0
;PCODE: $000000AD VOL: 0
;PCODE: $000000AE VOL: 0
;PCODE: $000000AF VOL: 0
;   if (++tx_wr_index == TX_BUFFER_SIZE) tx_wr_index=0;
;PCODE: $000000B0 VOL: 0
;PCODE: $000000B1 VOL: 0
;PCODE: $000000B2 VOL: 0
;PCODE: $000000B3 VOL: 0
;PCODE: $000000B4 VOL: 0
;PCODE: $000000B5 VOL: 0
;PCODE: $000000B6 VOL: 0
;   ++tx_counter;
;PCODE: $000000B7 VOL: 0
;PCODE: $000000B8 VOL: 0
;PCODE: $000000B9 VOL: 0
;PCODE: $000000BA VOL: 0
;   }
;else UDR=c;
;PCODE: $000000BB VOL: 0
;PCODE: $000000BC VOL: 0
;PCODE: $000000BD VOL: 0
;PCODE: $000000BE VOL: 0
;#asm("sei")
;PCODE: $000000BF VOL: 0
;PCODE: $000000C0 VOL: 0
	sei
;PCODE: $000000C1 VOL: 0
;}
;PCODE: $000000C2 VOL: 0
;PCODE: $000000C3 VOL: 0
;PCODE: $000000C4 VOL: 0
;#pragma used-
;#endif
;
;
;//-----------------------------------------------
;void out_drv(void)
; 0000 0050 {
;PCODE: $000000C5 VOL: 0
;PCODE: $000000C6 VOL: 0
; 0000 0051 DDRB=0xff;
;PCODE: $000000C7 VOL: 0
;PCODE: $000000C8 VOL: 0
; 0000 0052 out_stat=out_stat1|out_stat2;
;PCODE: $000000C9 VOL: 0
;PCODE: $000000CA VOL: 0
;PCODE: $000000CB VOL: 0
;PCODE: $000000CC VOL: 0
; 0000 0053 PORTB=~out_stat;
;PCODE: $000000CD VOL: 0
;PCODE: $000000CE VOL: 0
;PCODE: $000000CF VOL: 0
; 0000 0054 //PORTB=~step2;
; 0000 0055 }
;PCODE: $000000D0 VOL: 0
;PCODE: $000000D1 VOL: 0
;
;
;
;//-----------------------------------------------
;void out_usart (char num,char data0,char data1,char data2,char data3,char data4,char data5,char data6,char data7,char da ...
; 0000 005B {
;PCODE: $000000D2 VOL: 0
;PCODE: $000000D3 VOL: 0
; 0000 005C char i,t=0;
; 0000 005D 
; 0000 005E char UOB[12];
; 0000 005F UOB[0]=data0;
;PCODE: $000000D4 VOL: 0
;PCODE: $000000D5 VOL: 0
;PCODE: $000000D6 VOL: 0
;PCODE: $000000D7 VOL: 0
;	num -> Y+23
;	data0 -> Y+22
;	data1 -> Y+21
;	data2 -> Y+20
;	data3 -> Y+19
;	data4 -> Y+18
;	data5 -> Y+17
;	data6 -> Y+16
;	data7 -> Y+15
;	data8 -> Y+14
;	i -> R17
;	t -> R16
;	UOB -> Y+2
;PCODE: $000000D8 VOL: 0
;PCODE: $000000D9 VOL: 0
;PCODE: $000000DA VOL: 0
;PCODE: $000000DB VOL: 0
; 0000 0060 UOB[1]=data1;
;PCODE: $000000DC VOL: 0
;PCODE: $000000DD VOL: 0
; 0000 0061 UOB[2]=data2;
;PCODE: $000000DE VOL: 0
;PCODE: $000000DF VOL: 0
; 0000 0062 UOB[3]=data3;
;PCODE: $000000E0 VOL: 0
;PCODE: $000000E1 VOL: 0
; 0000 0063 UOB[4]=data4;
;PCODE: $000000E2 VOL: 0
;PCODE: $000000E3 VOL: 0
; 0000 0064 UOB[5]=data5;
;PCODE: $000000E4 VOL: 0
;PCODE: $000000E5 VOL: 0
; 0000 0065 UOB[6]=data6;
;PCODE: $000000E6 VOL: 0
;PCODE: $000000E7 VOL: 0
; 0000 0066 UOB[7]=data7;
;PCODE: $000000E8 VOL: 0
;PCODE: $000000E9 VOL: 0
; 0000 0067 UOB[8]=data8;
;PCODE: $000000EA VOL: 0
;PCODE: $000000EB VOL: 0
; 0000 0068 
; 0000 0069 for (i=0;i<num;i++)
;PCODE: $000000EC VOL: 0
;PCODE: $000000ED VOL: 0
;PCODE: $000000EE VOL: 0
;PCODE: $000000EF VOL: 0
;PCODE: $000000F0 VOL: 0
;PCODE: $000000F1 VOL: 0
;PCODE: $000000F2 VOL: 0
;PCODE: $000000F3 VOL: 0
;PCODE: $000000F4 VOL: 0
; 0000 006A 	{
; 0000 006B 	putchar(UOB[i]);
;PCODE: $000000F5 VOL: 0
;PCODE: $000000F6 VOL: 0
;PCODE: $000000F7 VOL: 0
;PCODE: $000000F8 VOL: 0
;PCODE: $000000F9 VOL: 0
;PCODE: $000000FA VOL: 0
; 0000 006C 	}
;PCODE: $000000FB VOL: 0
;PCODE: $000000FC VOL: 0
;PCODE: $000000FD VOL: 0
;PCODE: $000000FE VOL: 0
;PCODE: $000000FF VOL: 0
; 0000 006D }
;PCODE: $00000100 VOL: 0
;PCODE: $00000101 VOL: 0
;PCODE: $00000102 VOL: 0
;PCODE: $00000103 VOL: 0
;PCODE: $00000104 VOL: 0
;PCODE: $00000105 VOL: 0
;PCODE: $00000106 VOL: 0
;
;//-----------------------------------------------
;void byte_drv(void)
; 0000 0071 {
;PCODE: $00000107 VOL: 0
;PCODE: $00000108 VOL: 0
; 0000 0072 cmnd_byte|=0x80;
;PCODE: $00000109 VOL: 0
;PCODE: $0000010A VOL: 0
;PCODE: $0000010B VOL: 0
; 0000 0073 state_byte=0xff;
;PCODE: $0000010C VOL: 0
;PCODE: $0000010D VOL: 0
; 0000 0074 
; 0000 0075 if(ch_on[0]!=coON)state_byte&=~(1<<0);
;PCODE: $0000010E VOL: 0
;PCODE: $0000010F VOL: 0
;PCODE: $00000110 VOL: 0
;PCODE: $00000111 VOL: 0
;PCODE: $00000112 VOL: 0
;PCODE: $00000113 VOL: 0
;PCODE: $00000114 VOL: 0
; 0000 0076 if(ch_on[1]!=coON)state_byte&=~(1<<1);
;PCODE: $00000115 VOL: 0
;PCODE: $00000116 VOL: 0
;PCODE: $00000117 VOL: 0
;PCODE: $00000118 VOL: 0
;PCODE: $00000119 VOL: 0
;PCODE: $0000011A VOL: 0
;PCODE: $0000011B VOL: 0
;PCODE: $0000011C VOL: 0
;PCODE: $0000011D VOL: 0
; 0000 0077 if(ch_on[2]!=coON)state_byte&=~(1<<2);
;PCODE: $0000011E VOL: 0
;PCODE: $0000011F VOL: 0
;PCODE: $00000120 VOL: 0
;PCODE: $00000121 VOL: 0
;PCODE: $00000122 VOL: 0
;PCODE: $00000123 VOL: 0
;PCODE: $00000124 VOL: 0
;PCODE: $00000125 VOL: 0
;PCODE: $00000126 VOL: 0
; 0000 0078 if(ch_on[3]!=coON)state_byte&=~(1<<3);
;PCODE: $00000127 VOL: 0
;PCODE: $00000128 VOL: 0
;PCODE: $00000129 VOL: 0
;PCODE: $0000012A VOL: 0
;PCODE: $0000012B VOL: 0
;PCODE: $0000012C VOL: 0
;PCODE: $0000012D VOL: 0
;PCODE: $0000012E VOL: 0
;PCODE: $0000012F VOL: 0
; 0000 0079 if(ch_on[4]!=coON)state_byte&=~(1<<4);
;PCODE: $00000130 VOL: 0
;PCODE: $00000131 VOL: 0
;PCODE: $00000132 VOL: 0
;PCODE: $00000133 VOL: 0
;PCODE: $00000134 VOL: 0
;PCODE: $00000135 VOL: 0
;PCODE: $00000136 VOL: 0
;PCODE: $00000137 VOL: 0
;PCODE: $00000138 VOL: 0
; 0000 007A if(ch_on[5]!=coON)state_byte&=~(1<<5);
;PCODE: $00000139 VOL: 0
;PCODE: $0000013A VOL: 0
;PCODE: $0000013B VOL: 0
;PCODE: $0000013C VOL: 0
;PCODE: $0000013D VOL: 0
;PCODE: $0000013E VOL: 0
;PCODE: $0000013F VOL: 0
;PCODE: $00000140 VOL: 0
;PCODE: $00000141 VOL: 0
; 0000 007B 
; 0000 007C 
; 0000 007D }
;PCODE: $00000142 VOL: 0
;PCODE: $00000143 VOL: 0
;PCODE: $00000144 VOL: 0
;
;
;//-----------------------------------------------
;void in_drv(void)
; 0000 0082 {
;PCODE: $00000145 VOL: 0
;PCODE: $00000146 VOL: 0
; 0000 0083 char i,temp;
; 0000 0084 unsigned int tempUI;
; 0000 0085 DDRA&=0x33;
;PCODE: $00000147 VOL: 0
;	i -> R17
;	temp -> R16
;	tempUI -> R18,R19
;PCODE: $00000148 VOL: 0
;PCODE: $00000149 VOL: 0
;PCODE: $0000014A VOL: 0
; 0000 0086 PORTA|=0xcc;
;PCODE: $0000014B VOL: 0
;PCODE: $0000014C VOL: 0
;PCODE: $0000014D VOL: 0
; 0000 0087 in_word_new=PINA|0x33;
;PCODE: $0000014E VOL: 0
;PCODE: $0000014F VOL: 0
;PCODE: $00000150 VOL: 0
; 0000 0088 if(in_word_old==in_word_new)
;PCODE: $00000151 VOL: 0
;PCODE: $00000152 VOL: 0
;PCODE: $00000153 VOL: 0
;PCODE: $00000154 VOL: 0
; 0000 0089 	{
; 0000 008A 	if(in_word_cnt<10)
;PCODE: $00000155 VOL: 0
;PCODE: $00000156 VOL: 0
;PCODE: $00000157 VOL: 0
; 0000 008B 		{
; 0000 008C 		in_word_cnt++;
;PCODE: $00000158 VOL: 0
;PCODE: $00000159 VOL: 0
;PCODE: $0000015A VOL: 0
; 0000 008D 		if(in_word_cnt>=10)
;PCODE: $0000015B VOL: 0
;PCODE: $0000015C VOL: 0
;PCODE: $0000015D VOL: 0
; 0000 008E 			{
; 0000 008F 			in_word=in_word_old;
;PCODE: $0000015E VOL: 0
;PCODE: $0000015F VOL: 0
; 0000 0090 			}
; 0000 0091 		}
;PCODE: $00000160 VOL: 0
; 0000 0092 	}
;PCODE: $00000161 VOL: 0
; 0000 0093 else in_word_cnt=0;
;PCODE: $00000162 VOL: 0
;PCODE: $00000163 VOL: 0
;PCODE: $00000164 VOL: 0
;PCODE: $00000165 VOL: 0
; 0000 0094 
; 0000 0095 
; 0000 0096 in_word_old=in_word_new;
;PCODE: $00000166 VOL: 0
;PCODE: $00000167 VOL: 0
;PCODE: $00000168 VOL: 0
; 0000 0097 }
;PCODE: $00000169 VOL: 0
;PCODE: $0000016A VOL: 0
;PCODE: $0000016B VOL: 0
;PCODE: $0000016C VOL: 0
;
;
;
;//-----------------------------------------------
;void mdvr_drv(void)
; 0000 009D {
;PCODE: $0000016D VOL: 0
;PCODE: $0000016E VOL: 0
; 0000 009E if(!(in_word&(1<<MD1)))
;PCODE: $0000016F VOL: 0
;PCODE: $00000170 VOL: 0
;PCODE: $00000171 VOL: 0
; 0000 009F 	{
; 0000 00A0 	if(cnt_md1<10)
;PCODE: $00000172 VOL: 0
;PCODE: $00000173 VOL: 0
;PCODE: $00000174 VOL: 0
; 0000 00A1 		{
; 0000 00A2 		cnt_md1++;
;PCODE: $00000175 VOL: 0
;PCODE: $00000176 VOL: 0
;PCODE: $00000177 VOL: 0
; 0000 00A3 		if(cnt_md1==10) bMD1=1;
;PCODE: $00000178 VOL: 0
;PCODE: $00000179 VOL: 0
;PCODE: $0000017A VOL: 0
;PCODE: $0000017B VOL: 0
;PCODE: $0000017C VOL: 0
;PCODE: $0000017D VOL: 0
; 0000 00A4 		}
;PCODE: $0000017E VOL: 0
; 0000 00A5 
; 0000 00A6 	}
;PCODE: $0000017F VOL: 0
; 0000 00A7 else
;PCODE: $00000180 VOL: 0
;PCODE: $00000181 VOL: 0
; 0000 00A8 	{
; 0000 00A9 	if(cnt_md1)
;PCODE: $00000182 VOL: 0
;PCODE: $00000183 VOL: 0
;PCODE: $00000184 VOL: 0
; 0000 00AA 		{
; 0000 00AB 		cnt_md1--;
;PCODE: $00000185 VOL: 0
;PCODE: $00000186 VOL: 0
;PCODE: $00000187 VOL: 0
; 0000 00AC 		if(cnt_md1==0) bMD1=0;
;PCODE: $00000188 VOL: 0
;PCODE: $00000189 VOL: 0
;PCODE: $0000018A VOL: 0
;PCODE: $0000018B VOL: 0
;PCODE: $0000018C VOL: 0
;PCODE: $0000018D VOL: 0
; 0000 00AD 		}
;PCODE: $0000018E VOL: 0
; 0000 00AE 
; 0000 00AF 	}
;PCODE: $0000018F VOL: 0
;PCODE: $00000190 VOL: 0
; 0000 00B0 
; 0000 00B1 if(!(in_word&(1<<MD2)))
;PCODE: $00000191 VOL: 0
;PCODE: $00000192 VOL: 0
;PCODE: $00000193 VOL: 0
; 0000 00B2 	{
; 0000 00B3 	if(cnt_md2<10)
;PCODE: $00000194 VOL: 0
;PCODE: $00000195 VOL: 0
;PCODE: $00000196 VOL: 0
; 0000 00B4 		{
; 0000 00B5 		cnt_md2++;
;PCODE: $00000197 VOL: 0
;PCODE: $00000198 VOL: 0
;PCODE: $00000199 VOL: 0
; 0000 00B6 		if(cnt_md2==10) bMD2=1;
;PCODE: $0000019A VOL: 0
;PCODE: $0000019B VOL: 0
;PCODE: $0000019C VOL: 0
;PCODE: $0000019D VOL: 0
;PCODE: $0000019E VOL: 0
;PCODE: $0000019F VOL: 0
; 0000 00B7 		}
;PCODE: $000001A0 VOL: 0
; 0000 00B8 
; 0000 00B9 	}
;PCODE: $000001A1 VOL: 0
; 0000 00BA else
;PCODE: $000001A2 VOL: 0
;PCODE: $000001A3 VOL: 0
; 0000 00BB 	{
; 0000 00BC 	if(cnt_md2)
;PCODE: $000001A4 VOL: 0
;PCODE: $000001A5 VOL: 0
;PCODE: $000001A6 VOL: 0
; 0000 00BD 		{
; 0000 00BE 		cnt_md2--;
;PCODE: $000001A7 VOL: 0
;PCODE: $000001A8 VOL: 0
;PCODE: $000001A9 VOL: 0
; 0000 00BF 		if(cnt_md2==0) bMD2=0;
;PCODE: $000001AA VOL: 0
;PCODE: $000001AB VOL: 0
;PCODE: $000001AC VOL: 0
;PCODE: $000001AD VOL: 0
;PCODE: $000001AE VOL: 0
;PCODE: $000001AF VOL: 0
; 0000 00C0 		}
;PCODE: $000001B0 VOL: 0
; 0000 00C1 
; 0000 00C2 	}
;PCODE: $000001B1 VOL: 0
;PCODE: $000001B2 VOL: 0
; 0000 00C3 
; 0000 00C4 if(!(in_word&(1<<VR1)))
;PCODE: $000001B3 VOL: 0
;PCODE: $000001B4 VOL: 0
;PCODE: $000001B5 VOL: 0
; 0000 00C5 	{
; 0000 00C6 	if(cnt_vr1<10)
;PCODE: $000001B6 VOL: 0
;PCODE: $000001B7 VOL: 0
;PCODE: $000001B8 VOL: 0
; 0000 00C7 		{
; 0000 00C8 		cnt_vr1++;
;PCODE: $000001B9 VOL: 0
;PCODE: $000001BA VOL: 0
;PCODE: $000001BB VOL: 0
; 0000 00C9 		if(cnt_vr1==10) bVR1=1;
;PCODE: $000001BC VOL: 0
;PCODE: $000001BD VOL: 0
;PCODE: $000001BE VOL: 0
;PCODE: $000001BF VOL: 0
;PCODE: $000001C0 VOL: 0
;PCODE: $000001C1 VOL: 0
; 0000 00CA 		}
;PCODE: $000001C2 VOL: 0
; 0000 00CB 
; 0000 00CC 	}
;PCODE: $000001C3 VOL: 0
; 0000 00CD else
;PCODE: $000001C4 VOL: 0
;PCODE: $000001C5 VOL: 0
; 0000 00CE 	{
; 0000 00CF 	if(cnt_vr1)
;PCODE: $000001C6 VOL: 0
;PCODE: $000001C7 VOL: 0
;PCODE: $000001C8 VOL: 0
; 0000 00D0 		{
; 0000 00D1 		cnt_vr1--;
;PCODE: $000001C9 VOL: 0
;PCODE: $000001CA VOL: 0
;PCODE: $000001CB VOL: 0
; 0000 00D2 		if(cnt_vr1==0) bVR1=0;
;PCODE: $000001CC VOL: 0
;PCODE: $000001CD VOL: 0
;PCODE: $000001CE VOL: 0
;PCODE: $000001CF VOL: 0
;PCODE: $000001D0 VOL: 0
;PCODE: $000001D1 VOL: 0
; 0000 00D3 		}
;PCODE: $000001D2 VOL: 0
; 0000 00D4 
; 0000 00D5 	}
;PCODE: $000001D3 VOL: 0
;PCODE: $000001D4 VOL: 0
; 0000 00D6 
; 0000 00D7 if(!(in_word&(1<<VR2)))
;PCODE: $000001D5 VOL: 0
;PCODE: $000001D6 VOL: 0
;PCODE: $000001D7 VOL: 0
; 0000 00D8 	{
; 0000 00D9 	if(cnt_vr2<10)
;PCODE: $000001D8 VOL: 0
;PCODE: $000001D9 VOL: 0
;PCODE: $000001DA VOL: 0
; 0000 00DA 		{
; 0000 00DB 		cnt_vr2++;
;PCODE: $000001DB VOL: 0
;PCODE: $000001DC VOL: 0
;PCODE: $000001DD VOL: 0
; 0000 00DC 		if(cnt_vr2==10) bVR2=1;
;PCODE: $000001DE VOL: 0
;PCODE: $000001DF VOL: 0
;PCODE: $000001E0 VOL: 0
;PCODE: $000001E1 VOL: 0
;PCODE: $000001E2 VOL: 0
;PCODE: $000001E3 VOL: 0
; 0000 00DD 		}
;PCODE: $000001E4 VOL: 0
; 0000 00DE 
; 0000 00DF 	}
;PCODE: $000001E5 VOL: 0
; 0000 00E0 else
;PCODE: $000001E6 VOL: 0
;PCODE: $000001E7 VOL: 0
; 0000 00E1 	{
; 0000 00E2 	if(cnt_vr2)
;PCODE: $000001E8 VOL: 0
;PCODE: $000001E9 VOL: 0
;PCODE: $000001EA VOL: 0
; 0000 00E3 		{
; 0000 00E4 		cnt_vr2--;
;PCODE: $000001EB VOL: 0
;PCODE: $000001EC VOL: 0
;PCODE: $000001ED VOL: 0
; 0000 00E5 		if(cnt_vr2==0) bVR2=0;
;PCODE: $000001EE VOL: 0
;PCODE: $000001EF VOL: 0
;PCODE: $000001F0 VOL: 0
;PCODE: $000001F1 VOL: 0
;PCODE: $000001F2 VOL: 0
;PCODE: $000001F3 VOL: 0
; 0000 00E6 		}
;PCODE: $000001F4 VOL: 0
; 0000 00E7 
; 0000 00E8 	}
;PCODE: $000001F5 VOL: 0
;PCODE: $000001F6 VOL: 0
; 0000 00E9 }
;PCODE: $000001F7 VOL: 0
;PCODE: $000001F8 VOL: 0
;
;//-----------------------------------------------
;void step1_contr(void)
; 0000 00ED {
;PCODE: $000001F9 VOL: 0
;PCODE: $000001FA VOL: 0
; 0000 00EE 
; 0000 00EF out_stat1=0;
;PCODE: $000001FB VOL: 0
;PCODE: $000001FC VOL: 0
; 0000 00F0 if(mode1==mOFF)step1=sOFF;
;PCODE: $000001FD VOL: 0
;PCODE: $000001FE VOL: 0
;PCODE: $000001FF VOL: 0
;PCODE: $00000200 VOL: 0
;PCODE: $00000201 VOL: 0
; 0000 00F1 
; 0000 00F2 if(step1==sOFF)
;PCODE: $00000202 VOL: 0
;PCODE: $00000203 VOL: 0
;PCODE: $00000204 VOL: 0
;PCODE: $00000205 VOL: 0
; 0000 00F3 	{
; 0000 00F4 
; 0000 00F5 	}
; 0000 00F6 else if(step1==s1)
;PCODE: $00000206 VOL: 0
;PCODE: $00000207 VOL: 0
;PCODE: $00000208 VOL: 0
;PCODE: $00000209 VOL: 0
;PCODE: $0000020A VOL: 0
; 0000 00F7 	{
; 0000 00F8 	cnt_del1=20;
;PCODE: $0000020B VOL: 0
;PCODE: $0000020C VOL: 0
; 0000 00F9 	step1=s2;
;PCODE: $0000020D VOL: 0
;PCODE: $0000020E VOL: 0
; 0000 00FA 	}
; 0000 00FB else if(step1==s2)
;PCODE: $0000020F VOL: 0
;PCODE: $00000210 VOL: 0
;PCODE: $00000211 VOL: 0
;PCODE: $00000212 VOL: 0
;PCODE: $00000213 VOL: 0
; 0000 00FC 	{
; 0000 00FD 	cnt_del1--;
;PCODE: $00000214 VOL: 0
;PCODE: $00000215 VOL: 0
;PCODE: $00000216 VOL: 0
; 0000 00FE 	if(cnt_del1==0)
;PCODE: $00000217 VOL: 0
;PCODE: $00000218 VOL: 0
;PCODE: $00000219 VOL: 0
; 0000 00FF 		{
; 0000 0100 		cnt_del1=20;
;PCODE: $0000021A VOL: 0
;PCODE: $0000021B VOL: 0
; 0000 0101 		step1=s3;
;PCODE: $0000021C VOL: 0
;PCODE: $0000021D VOL: 0
; 0000 0102 		}
; 0000 0103 	}
;PCODE: $0000021E VOL: 0
; 0000 0104 else if(step1==s3)
;PCODE: $0000021F VOL: 0
;PCODE: $00000220 VOL: 0
;PCODE: $00000221 VOL: 0
;PCODE: $00000222 VOL: 0
;PCODE: $00000223 VOL: 0
; 0000 0105 	{
; 0000 0106 	out_stat1|=(1<<PP1_1);
;PCODE: $00000224 VOL: 0
;PCODE: $00000225 VOL: 0
;PCODE: $00000226 VOL: 0
; 0000 0107 	cnt_del1--;
;PCODE: $00000227 VOL: 0
;PCODE: $00000228 VOL: 0
;PCODE: $00000229 VOL: 0
; 0000 0108 	if(cnt_del1==0)
;PCODE: $0000022A VOL: 0
;PCODE: $0000022B VOL: 0
;PCODE: $0000022C VOL: 0
; 0000 0109 		{
; 0000 010A 		step1=s4;
;PCODE: $0000022D VOL: 0
;PCODE: $0000022E VOL: 0
; 0000 010B 		}
; 0000 010C 
; 0000 010D 	}
;PCODE: $0000022F VOL: 0
; 0000 010E else if(step1==s4)
;PCODE: $00000230 VOL: 0
;PCODE: $00000231 VOL: 0
;PCODE: $00000232 VOL: 0
;PCODE: $00000233 VOL: 0
;PCODE: $00000234 VOL: 0
; 0000 010F 	{
; 0000 0110 	out_stat1|=(1<<PP1_1)|(1<<PP1_2);
;PCODE: $00000235 VOL: 0
;PCODE: $00000236 VOL: 0
;PCODE: $00000237 VOL: 0
; 0000 0111 	if(bVR1)
;PCODE: $00000238 VOL: 0
;PCODE: $00000239 VOL: 0
;PCODE: $0000023A VOL: 0
; 0000 0112 		{
; 0000 0113 		step1=s5;
;PCODE: $0000023B VOL: 0
;PCODE: $0000023C VOL: 0
; 0000 0114 		cnt_del1=50;
;PCODE: $0000023D VOL: 0
;PCODE: $0000023E VOL: 0
; 0000 0115 		}
; 0000 0116 	}
;PCODE: $0000023F VOL: 0
; 0000 0117 else if(step1==s5)
;PCODE: $00000240 VOL: 0
;PCODE: $00000241 VOL: 0
;PCODE: $00000242 VOL: 0
;PCODE: $00000243 VOL: 0
;PCODE: $00000244 VOL: 0
; 0000 0118 	{
; 0000 0119 	out_stat1|=(1<<PP1_1)|(1<<PP1_2)|(1<<PP1_3);
;PCODE: $00000245 VOL: 0
;PCODE: $00000246 VOL: 0
;PCODE: $00000247 VOL: 0
; 0000 011A 	cnt_del1--;
;PCODE: $00000248 VOL: 0
;PCODE: $00000249 VOL: 0
;PCODE: $0000024A VOL: 0
; 0000 011B 	if(cnt_del1==0)
;PCODE: $0000024B VOL: 0
;PCODE: $0000024C VOL: 0
;PCODE: $0000024D VOL: 0
; 0000 011C 		{
; 0000 011D 		cnt_del1=80;
;PCODE: $0000024E VOL: 0
;PCODE: $0000024F VOL: 0
; 0000 011E 		step1=s6;
;PCODE: $00000250 VOL: 0
;PCODE: $00000251 VOL: 0
; 0000 011F 		}
; 0000 0120 	}
;PCODE: $00000252 VOL: 0
; 0000 0121 else if(step1==s6)
;PCODE: $00000253 VOL: 0
;PCODE: $00000254 VOL: 0
;PCODE: $00000255 VOL: 0
;PCODE: $00000256 VOL: 0
;PCODE: $00000257 VOL: 0
; 0000 0122 	{
; 0000 0123 	out_stat1|=(1<<PP1_1)|(1<<PP1_2)|(1<<PP1_3)|(1<<PP1_4);
;PCODE: $00000258 VOL: 0
;PCODE: $00000259 VOL: 0
;PCODE: $0000025A VOL: 0
; 0000 0124 	cnt_del1--;
;PCODE: $0000025B VOL: 0
;PCODE: $0000025C VOL: 0
;PCODE: $0000025D VOL: 0
; 0000 0125 	if(cnt_del1==0)
;PCODE: $0000025E VOL: 0
;PCODE: $0000025F VOL: 0
;PCODE: $00000260 VOL: 0
; 0000 0126 		{
; 0000 0127 		cnt_del1=60;
;PCODE: $00000261 VOL: 0
;PCODE: $00000262 VOL: 0
; 0000 0128 		step1=s7;
;PCODE: $00000263 VOL: 0
;PCODE: $00000264 VOL: 0
; 0000 0129 		}
; 0000 012A 	}
;PCODE: $00000265 VOL: 0
; 0000 012B else if(step1==s7)
;PCODE: $00000266 VOL: 0
;PCODE: $00000267 VOL: 0
;PCODE: $00000268 VOL: 0
;PCODE: $00000269 VOL: 0
;PCODE: $0000026A VOL: 0
; 0000 012C 	{
; 0000 012D 	out_stat1|=(1<<PP1_1)|(1<<PP1_4);
;PCODE: $0000026B VOL: 0
;PCODE: $0000026C VOL: 0
;PCODE: $0000026D VOL: 0
; 0000 012E 	cnt_del1--;
;PCODE: $0000026E VOL: 0
;PCODE: $0000026F VOL: 0
;PCODE: $00000270 VOL: 0
; 0000 012F 	if(cnt_del1==0)
;PCODE: $00000271 VOL: 0
;PCODE: $00000272 VOL: 0
;PCODE: $00000273 VOL: 0
; 0000 0130 		{
; 0000 0131 		cnt_del1=20;
;PCODE: $00000274 VOL: 0
;PCODE: $00000275 VOL: 0
; 0000 0132 		step1=s8;
;PCODE: $00000276 VOL: 0
;PCODE: $00000277 VOL: 0
; 0000 0133 		}
; 0000 0134 	}
;PCODE: $00000278 VOL: 0
; 0000 0135 else if(step1==s8)
;PCODE: $00000279 VOL: 0
;PCODE: $0000027A VOL: 0
;PCODE: $0000027B VOL: 0
;PCODE: $0000027C VOL: 0
;PCODE: $0000027D VOL: 0
; 0000 0136 	{
; 0000 0137 	out_stat1|=(1<<PP1_4);
;PCODE: $0000027E VOL: 0
;PCODE: $0000027F VOL: 0
;PCODE: $00000280 VOL: 0
; 0000 0138 	cnt_del1--;
;PCODE: $00000281 VOL: 0
;PCODE: $00000282 VOL: 0
;PCODE: $00000283 VOL: 0
; 0000 0139 	if(cnt_del1==0)
;PCODE: $00000284 VOL: 0
;PCODE: $00000285 VOL: 0
;PCODE: $00000286 VOL: 0
; 0000 013A 		{
; 0000 013B 		step1=s9;
;PCODE: $00000287 VOL: 0
;PCODE: $00000288 VOL: 0
; 0000 013C 		}
; 0000 013D 	}
;PCODE: $00000289 VOL: 0
; 0000 013E else if(step1==s9)
;PCODE: $0000028A VOL: 0
;PCODE: $0000028B VOL: 0
;PCODE: $0000028C VOL: 0
;PCODE: $0000028D VOL: 0
;PCODE: $0000028E VOL: 0
; 0000 013F 	{
; 0000 0140 	if(bMD1)
;PCODE: $0000028F VOL: 0
;PCODE: $00000290 VOL: 0
;PCODE: $00000291 VOL: 0
; 0000 0141 		{
; 0000 0142 		step1=sOFF;
;PCODE: $00000292 VOL: 0
;PCODE: $00000293 VOL: 0
; 0000 0143 		}
; 0000 0144 	}
;PCODE: $00000294 VOL: 0
; 0000 0145 
; 0000 0146 
; 0000 0147 }
;PCODE: $00000295 VOL: 0
;PCODE: $00000296 VOL: 0
;PCODE: $00000297 VOL: 0
;PCODE: $00000298 VOL: 0
;PCODE: $00000299 VOL: 0
;PCODE: $0000029A VOL: 0
;PCODE: $0000029B VOL: 0
;PCODE: $0000029C VOL: 0
;PCODE: $0000029D VOL: 0
;PCODE: $0000029E VOL: 0
;PCODE: $0000029F VOL: 0
;PCODE: $000002A0 VOL: 0
;
;//-----------------------------------------------
;void step2_contr(void)
; 0000 014B {
;PCODE: $000002A1 VOL: 0
;PCODE: $000002A2 VOL: 0
; 0000 014C out_stat2=0;
;PCODE: $000002A3 VOL: 0
;PCODE: $000002A4 VOL: 0
; 0000 014D if(mode2==mOFF)step2=sOFF;
;PCODE: $000002A5 VOL: 0
;PCODE: $000002A6 VOL: 0
;PCODE: $000002A7 VOL: 0
;PCODE: $000002A8 VOL: 0
;PCODE: $000002A9 VOL: 0
; 0000 014E 
; 0000 014F if(step2==sOFF)
;PCODE: $000002AA VOL: 0
;PCODE: $000002AB VOL: 0
;PCODE: $000002AC VOL: 0
;PCODE: $000002AD VOL: 0
; 0000 0150 	{
; 0000 0151 
; 0000 0152 	}
; 0000 0153 else if(step2==s1)
;PCODE: $000002AE VOL: 0
;PCODE: $000002AF VOL: 0
;PCODE: $000002B0 VOL: 0
;PCODE: $000002B1 VOL: 0
;PCODE: $000002B2 VOL: 0
; 0000 0154 	{
; 0000 0155 	cnt_del2=20;
;PCODE: $000002B3 VOL: 0
;PCODE: $000002B4 VOL: 0
; 0000 0156 	step2=s2;
;PCODE: $000002B5 VOL: 0
;PCODE: $000002B6 VOL: 0
; 0000 0157 	}
; 0000 0158 else if(step2==s2)
;PCODE: $000002B7 VOL: 0
;PCODE: $000002B8 VOL: 0
;PCODE: $000002B9 VOL: 0
;PCODE: $000002BA VOL: 0
;PCODE: $000002BB VOL: 0
; 0000 0159 	{
; 0000 015A 	cnt_del2--;
;PCODE: $000002BC VOL: 0
;PCODE: $000002BD VOL: 0
;PCODE: $000002BE VOL: 0
; 0000 015B 	if(cnt_del2==0)
;PCODE: $000002BF VOL: 0
;PCODE: $000002C0 VOL: 0
;PCODE: $000002C1 VOL: 0
; 0000 015C 		{
; 0000 015D 		cnt_del2=20;
;PCODE: $000002C2 VOL: 0
;PCODE: $000002C3 VOL: 0
; 0000 015E 		step2=s3;
;PCODE: $000002C4 VOL: 0
;PCODE: $000002C5 VOL: 0
; 0000 015F 		}
; 0000 0160 	}
;PCODE: $000002C6 VOL: 0
; 0000 0161 else if(step2==s3)
;PCODE: $000002C7 VOL: 0
;PCODE: $000002C8 VOL: 0
;PCODE: $000002C9 VOL: 0
;PCODE: $000002CA VOL: 0
;PCODE: $000002CB VOL: 0
; 0000 0162 	{
; 0000 0163 	out_stat2|=(1<<PP2_1);
;PCODE: $000002CC VOL: 0
;PCODE: $000002CD VOL: 0
;PCODE: $000002CE VOL: 0
; 0000 0164 	cnt_del2--;
;PCODE: $000002CF VOL: 0
;PCODE: $000002D0 VOL: 0
;PCODE: $000002D1 VOL: 0
; 0000 0165 	if(cnt_del2==0)
;PCODE: $000002D2 VOL: 0
;PCODE: $000002D3 VOL: 0
;PCODE: $000002D4 VOL: 0
; 0000 0166 		{
; 0000 0167 		step2=s4;
;PCODE: $000002D5 VOL: 0
;PCODE: $000002D6 VOL: 0
; 0000 0168 		}
; 0000 0169 
; 0000 016A 	}
;PCODE: $000002D7 VOL: 0
; 0000 016B else if(step2==s4)
;PCODE: $000002D8 VOL: 0
;PCODE: $000002D9 VOL: 0
;PCODE: $000002DA VOL: 0
;PCODE: $000002DB VOL: 0
;PCODE: $000002DC VOL: 0
; 0000 016C 	{
; 0000 016D 	out_stat2|=(1<<PP2_1)|(1<<PP2_2);
;PCODE: $000002DD VOL: 0
;PCODE: $000002DE VOL: 0
;PCODE: $000002DF VOL: 0
; 0000 016E 	if(bVR2)
;PCODE: $000002E0 VOL: 0
;PCODE: $000002E1 VOL: 0
;PCODE: $000002E2 VOL: 0
; 0000 016F 		{
; 0000 0170 		step2=s5;
;PCODE: $000002E3 VOL: 0
;PCODE: $000002E4 VOL: 0
; 0000 0171 		cnt_del2=50;
;PCODE: $000002E5 VOL: 0
;PCODE: $000002E6 VOL: 0
; 0000 0172 		}
; 0000 0173 	}
;PCODE: $000002E7 VOL: 0
; 0000 0174 else if(step2==s5)
;PCODE: $000002E8 VOL: 0
;PCODE: $000002E9 VOL: 0
;PCODE: $000002EA VOL: 0
;PCODE: $000002EB VOL: 0
;PCODE: $000002EC VOL: 0
; 0000 0175 	{
; 0000 0176 	out_stat2|=(1<<PP2_1)|(1<<PP2_2)|(1<<PP2_3);
;PCODE: $000002ED VOL: 0
;PCODE: $000002EE VOL: 0
;PCODE: $000002EF VOL: 0
; 0000 0177 	cnt_del2--;
;PCODE: $000002F0 VOL: 0
;PCODE: $000002F1 VOL: 0
;PCODE: $000002F2 VOL: 0
; 0000 0178 	if(cnt_del2==0)
;PCODE: $000002F3 VOL: 0
;PCODE: $000002F4 VOL: 0
;PCODE: $000002F5 VOL: 0
; 0000 0179 		{
; 0000 017A 		cnt_del2=80;
;PCODE: $000002F6 VOL: 0
;PCODE: $000002F7 VOL: 0
; 0000 017B 		step2=s6;
;PCODE: $000002F8 VOL: 0
;PCODE: $000002F9 VOL: 0
; 0000 017C 		}
; 0000 017D 	}
;PCODE: $000002FA VOL: 0
; 0000 017E else if(step2==s6)
;PCODE: $000002FB VOL: 0
;PCODE: $000002FC VOL: 0
;PCODE: $000002FD VOL: 0
;PCODE: $000002FE VOL: 0
;PCODE: $000002FF VOL: 0
; 0000 017F 	{
; 0000 0180 	out_stat2|=(1<<PP2_1)|(1<<PP2_2)|(1<<PP2_3)|(1<<PP2_4);
;PCODE: $00000300 VOL: 0
;PCODE: $00000301 VOL: 0
;PCODE: $00000302 VOL: 0
; 0000 0181 	cnt_del2--;
;PCODE: $00000303 VOL: 0
;PCODE: $00000304 VOL: 0
;PCODE: $00000305 VOL: 0
; 0000 0182 	if(cnt_del2==0)
;PCODE: $00000306 VOL: 0
;PCODE: $00000307 VOL: 0
;PCODE: $00000308 VOL: 0
; 0000 0183 		{
; 0000 0184 		cnt_del2=60;
;PCODE: $00000309 VOL: 0
;PCODE: $0000030A VOL: 0
; 0000 0185 		step2=s7;
;PCODE: $0000030B VOL: 0
;PCODE: $0000030C VOL: 0
; 0000 0186 		}
; 0000 0187 	}
;PCODE: $0000030D VOL: 0
; 0000 0188 else if(step2==s7)
;PCODE: $0000030E VOL: 0
;PCODE: $0000030F VOL: 0
;PCODE: $00000310 VOL: 0
;PCODE: $00000311 VOL: 0
;PCODE: $00000312 VOL: 0
; 0000 0189 	{
; 0000 018A 	out_stat2|=(1<<PP2_1)|(1<<PP2_4);
;PCODE: $00000313 VOL: 0
;PCODE: $00000314 VOL: 0
;PCODE: $00000315 VOL: 0
; 0000 018B 	cnt_del2--;
;PCODE: $00000316 VOL: 0
;PCODE: $00000317 VOL: 0
;PCODE: $00000318 VOL: 0
; 0000 018C 	if(cnt_del2==0)
;PCODE: $00000319 VOL: 0
;PCODE: $0000031A VOL: 0
;PCODE: $0000031B VOL: 0
; 0000 018D 		{
; 0000 018E 		cnt_del2=20;
;PCODE: $0000031C VOL: 0
;PCODE: $0000031D VOL: 0
; 0000 018F 		step2=s8;
;PCODE: $0000031E VOL: 0
;PCODE: $0000031F VOL: 0
; 0000 0190 		}
; 0000 0191 	}
;PCODE: $00000320 VOL: 0
; 0000 0192 else if(step2==s8)
;PCODE: $00000321 VOL: 0
;PCODE: $00000322 VOL: 0
;PCODE: $00000323 VOL: 0
;PCODE: $00000324 VOL: 0
;PCODE: $00000325 VOL: 0
; 0000 0193 	{
; 0000 0194 	out_stat2|=(1<<PP2_4);
;PCODE: $00000326 VOL: 0
;PCODE: $00000327 VOL: 0
;PCODE: $00000328 VOL: 0
; 0000 0195 	cnt_del2--;
;PCODE: $00000329 VOL: 0
;PCODE: $0000032A VOL: 0
;PCODE: $0000032B VOL: 0
; 0000 0196 	if(cnt_del2==0)
;PCODE: $0000032C VOL: 0
;PCODE: $0000032D VOL: 0
;PCODE: $0000032E VOL: 0
; 0000 0197 		{
; 0000 0198 		step2=s9;
;PCODE: $0000032F VOL: 0
;PCODE: $00000330 VOL: 0
; 0000 0199 		}
; 0000 019A 	}
;PCODE: $00000331 VOL: 0
; 0000 019B else if(step2==s9)
;PCODE: $00000332 VOL: 0
;PCODE: $00000333 VOL: 0
;PCODE: $00000334 VOL: 0
;PCODE: $00000335 VOL: 0
;PCODE: $00000336 VOL: 0
; 0000 019C 	{
; 0000 019D 	if(bMD2)
;PCODE: $00000337 VOL: 0
;PCODE: $00000338 VOL: 0
;PCODE: $00000339 VOL: 0
; 0000 019E 		{
; 0000 019F 		step2=sOFF;
;PCODE: $0000033A VOL: 0
;PCODE: $0000033B VOL: 0
; 0000 01A0 		}
; 0000 01A1 	}
;PCODE: $0000033C VOL: 0
; 0000 01A2 
; 0000 01A3 //out_stat2=(1<<PP2_4);
; 0000 01A4 }
;PCODE: $0000033D VOL: 0
;PCODE: $0000033E VOL: 0
;PCODE: $0000033F VOL: 0
;PCODE: $00000340 VOL: 0
;PCODE: $00000341 VOL: 0
;PCODE: $00000342 VOL: 0
;PCODE: $00000343 VOL: 0
;PCODE: $00000344 VOL: 0
;PCODE: $00000345 VOL: 0
;PCODE: $00000346 VOL: 0
;PCODE: $00000347 VOL: 0
;PCODE: $00000348 VOL: 0
;
;//-----------------------------------------------
;void step1_contr_new(void)
; 0000 01A8 {
;PCODE: $00000349 VOL: 0
;PCODE: $0000034A VOL: 0
; 0000 01A9 
; 0000 01AA out_stat1=0;
;PCODE: $0000034B VOL: 0
;PCODE: $0000034C VOL: 0
; 0000 01AB if(mode1==mOFF)step1=sOFF;
;PCODE: $0000034D VOL: 0
;PCODE: $0000034E VOL: 0
;PCODE: $0000034F VOL: 0
;PCODE: $00000350 VOL: 0
;PCODE: $00000351 VOL: 0
; 0000 01AC 
; 0000 01AD if(step1==sOFF)
;PCODE: $00000352 VOL: 0
;PCODE: $00000353 VOL: 0
;PCODE: $00000354 VOL: 0
;PCODE: $00000355 VOL: 0
; 0000 01AE 	{
; 0000 01AF 
; 0000 01B0 	}
; 0000 01B1 else if(step1==s1)
;PCODE: $00000356 VOL: 0
;PCODE: $00000357 VOL: 0
;PCODE: $00000358 VOL: 0
;PCODE: $00000359 VOL: 0
;PCODE: $0000035A VOL: 0
; 0000 01B2 	{
; 0000 01B3 	cnt_del1=20;
;PCODE: $0000035B VOL: 0
;PCODE: $0000035C VOL: 0
; 0000 01B4 	step1=s2;
;PCODE: $0000035D VOL: 0
;PCODE: $0000035E VOL: 0
; 0000 01B5 	}
; 0000 01B6 else if(step1==s2)
;PCODE: $0000035F VOL: 0
;PCODE: $00000360 VOL: 0
;PCODE: $00000361 VOL: 0
;PCODE: $00000362 VOL: 0
;PCODE: $00000363 VOL: 0
; 0000 01B7 	{
; 0000 01B8 	cnt_del1--;
;PCODE: $00000364 VOL: 0
;PCODE: $00000365 VOL: 0
;PCODE: $00000366 VOL: 0
; 0000 01B9 	if(cnt_del1==0)
;PCODE: $00000367 VOL: 0
;PCODE: $00000368 VOL: 0
;PCODE: $00000369 VOL: 0
; 0000 01BA 		{
; 0000 01BB 		//cnt_del1=20;
; 0000 01BC 		step1=s4;
;PCODE: $0000036A VOL: 0
;PCODE: $0000036B VOL: 0
; 0000 01BD 		}
; 0000 01BE 	}
;PCODE: $0000036C VOL: 0
; 0000 01BF     /*
; 0000 01C0 else if(step1==s3)
; 0000 01C1 	{
; 0000 01C2 	out_stat1|=(1<<PP1_1);
; 0000 01C3 	cnt_del1--;
; 0000 01C4 	if(cnt_del1==0)
; 0000 01C5 		{
; 0000 01C6 		step1=s4;
; 0000 01C7 		}
; 0000 01C8 
; 0000 01C9 	}*/
; 0000 01CA else if(step1==s4)
;PCODE: $0000036D VOL: 0
;PCODE: $0000036E VOL: 0
;PCODE: $0000036F VOL: 0
;PCODE: $00000370 VOL: 0
;PCODE: $00000371 VOL: 0
; 0000 01CB 	{
; 0000 01CC 	out_stat1|=(1<<PP1_1)|(1<<PP1_2);
;PCODE: $00000372 VOL: 0
;PCODE: $00000373 VOL: 0
;PCODE: $00000374 VOL: 0
; 0000 01CD 	if(bVR1)
;PCODE: $00000375 VOL: 0
;PCODE: $00000376 VOL: 0
;PCODE: $00000377 VOL: 0
; 0000 01CE 		{
; 0000 01CF 		step1=s5;
;PCODE: $00000378 VOL: 0
;PCODE: $00000379 VOL: 0
; 0000 01D0 		cnt_del1=30;
;PCODE: $0000037A VOL: 0
;PCODE: $0000037B VOL: 0
; 0000 01D1 		}
; 0000 01D2 	}
;PCODE: $0000037C VOL: 0
; 0000 01D3 
; 0000 01D4 else if(step1==s5)
;PCODE: $0000037D VOL: 0
;PCODE: $0000037E VOL: 0
;PCODE: $0000037F VOL: 0
;PCODE: $00000380 VOL: 0
;PCODE: $00000381 VOL: 0
; 0000 01D5 	{
; 0000 01D6 	out_stat1|=(1<<PP1_1)|(1<<PP1_2)|(1<<PP1_3);
;PCODE: $00000382 VOL: 0
;PCODE: $00000383 VOL: 0
;PCODE: $00000384 VOL: 0
; 0000 01D7 	cnt_del1--;
;PCODE: $00000385 VOL: 0
;PCODE: $00000386 VOL: 0
;PCODE: $00000387 VOL: 0
; 0000 01D8 	if(cnt_del1==0)
;PCODE: $00000388 VOL: 0
;PCODE: $00000389 VOL: 0
;PCODE: $0000038A VOL: 0
; 0000 01D9 		{
; 0000 01DA 		cnt_del1=30;
;PCODE: $0000038B VOL: 0
;PCODE: $0000038C VOL: 0
; 0000 01DB 		step1=s6;
;PCODE: $0000038D VOL: 0
;PCODE: $0000038E VOL: 0
; 0000 01DC 		}
; 0000 01DD 	}
;PCODE: $0000038F VOL: 0
; 0000 01DE else if(step1==s6)
;PCODE: $00000390 VOL: 0
;PCODE: $00000391 VOL: 0
;PCODE: $00000392 VOL: 0
;PCODE: $00000393 VOL: 0
;PCODE: $00000394 VOL: 0
; 0000 01DF 	{
; 0000 01E0 	out_stat1|=(1<<PP1_1)|(1<<PP1_2)|(1<<PP1_3)|(1<<PP1_4);
;PCODE: $00000395 VOL: 0
;PCODE: $00000396 VOL: 0
;PCODE: $00000397 VOL: 0
; 0000 01E1 	cnt_del1--;
;PCODE: $00000398 VOL: 0
;PCODE: $00000399 VOL: 0
;PCODE: $0000039A VOL: 0
; 0000 01E2 	if(cnt_del1==0)
;PCODE: $0000039B VOL: 0
;PCODE: $0000039C VOL: 0
;PCODE: $0000039D VOL: 0
; 0000 01E3 		{
; 0000 01E4 		cnt_del1=30;
;PCODE: $0000039E VOL: 0
;PCODE: $0000039F VOL: 0
; 0000 01E5 		step1=s7;
;PCODE: $000003A0 VOL: 0
;PCODE: $000003A1 VOL: 0
; 0000 01E6 		}
; 0000 01E7 	}
;PCODE: $000003A2 VOL: 0
; 0000 01E8 else if(step1==s7)
;PCODE: $000003A3 VOL: 0
;PCODE: $000003A4 VOL: 0
;PCODE: $000003A5 VOL: 0
;PCODE: $000003A6 VOL: 0
;PCODE: $000003A7 VOL: 0
; 0000 01E9 	{
; 0000 01EA 	out_stat1|=(1<<PP1_1)|(1<<PP1_2)|(1<<PP1_4);
;PCODE: $000003A8 VOL: 0
;PCODE: $000003A9 VOL: 0
;PCODE: $000003AA VOL: 0
; 0000 01EB 	cnt_del1--;
;PCODE: $000003AB VOL: 0
;PCODE: $000003AC VOL: 0
;PCODE: $000003AD VOL: 0
; 0000 01EC 	if(cnt_del1==0)
;PCODE: $000003AE VOL: 0
;PCODE: $000003AF VOL: 0
;PCODE: $000003B0 VOL: 0
; 0000 01ED 		{
; 0000 01EE 		cnt_del1=20;
;PCODE: $000003B1 VOL: 0
;PCODE: $000003B2 VOL: 0
; 0000 01EF 		step1=s8;
;PCODE: $000003B3 VOL: 0
;PCODE: $000003B4 VOL: 0
; 0000 01F0 		}
; 0000 01F1 	}
;PCODE: $000003B5 VOL: 0
; 0000 01F2 else if(step1==s8)
;PCODE: $000003B6 VOL: 0
;PCODE: $000003B7 VOL: 0
;PCODE: $000003B8 VOL: 0
;PCODE: $000003B9 VOL: 0
;PCODE: $000003BA VOL: 0
; 0000 01F3 	{
; 0000 01F4 	out_stat1|=(1<<PP1_1);
;PCODE: $000003BB VOL: 0
;PCODE: $000003BC VOL: 0
;PCODE: $000003BD VOL: 0
; 0000 01F5 	cnt_del1--;
;PCODE: $000003BE VOL: 0
;PCODE: $000003BF VOL: 0
;PCODE: $000003C0 VOL: 0
; 0000 01F6 	if(cnt_del1==0)
;PCODE: $000003C1 VOL: 0
;PCODE: $000003C2 VOL: 0
;PCODE: $000003C3 VOL: 0
; 0000 01F7 		{
; 0000 01F8 		step1=s9;
;PCODE: $000003C4 VOL: 0
;PCODE: $000003C5 VOL: 0
; 0000 01F9 		}
; 0000 01FA 	}
;PCODE: $000003C6 VOL: 0
; 0000 01FB else if(step1==s9)
;PCODE: $000003C7 VOL: 0
;PCODE: $000003C8 VOL: 0
;PCODE: $000003C9 VOL: 0
;PCODE: $000003CA VOL: 0
;PCODE: $000003CB VOL: 0
; 0000 01FC 	{
; 0000 01FD 	if(bMD1)
;PCODE: $000003CC VOL: 0
;PCODE: $000003CD VOL: 0
;PCODE: $000003CE VOL: 0
; 0000 01FE 		{
; 0000 01FF 		step1=sOFF;
;PCODE: $000003CF VOL: 0
;PCODE: $000003D0 VOL: 0
; 0000 0200 		}
; 0000 0201 	}
;PCODE: $000003D1 VOL: 0
; 0000 0202 
; 0000 0203 
; 0000 0204 }
;PCODE: $000003D2 VOL: 0
;PCODE: $000003D3 VOL: 0
;PCODE: $000003D4 VOL: 0
;PCODE: $000003D5 VOL: 0
;PCODE: $000003D6 VOL: 0
;PCODE: $000003D7 VOL: 0
;PCODE: $000003D8 VOL: 0
;PCODE: $000003D9 VOL: 0
;PCODE: $000003DA VOL: 0
;PCODE: $000003DB VOL: 0
;PCODE: $000003DC VOL: 0
;
;//-----------------------------------------------
;void cmnd_an(void)
; 0000 0208 {
;PCODE: $000003DD VOL: 0
;PCODE: $000003DE VOL: 0
; 0000 0209 /*DDRD.2=1;
; 0000 020A PORTD.2=!PORTD.2;*/
; 0000 020B if(cmnd==0x55)
;PCODE: $000003DF VOL: 0
;PCODE: $000003E0 VOL: 0
;PCODE: $000003E1 VOL: 0
; 0000 020C 	{
; 0000 020D 	if(mode1==mON)step1=s1;
;PCODE: $000003E2 VOL: 0
;PCODE: $000003E3 VOL: 0
;PCODE: $000003E4 VOL: 0
;PCODE: $000003E5 VOL: 0
;PCODE: $000003E6 VOL: 0
; 0000 020E 	if(mode2==mON)
;PCODE: $000003E7 VOL: 0
;PCODE: $000003E8 VOL: 0
;PCODE: $000003E9 VOL: 0
;PCODE: $000003EA VOL: 0
; 0000 020F 		{
; 0000 0210 		step2=s1;
;PCODE: $000003EB VOL: 0
;PCODE: $000003EC VOL: 0
; 0000 0211 		/*PORTD.2=!PORTD.2; */
; 0000 0212 		}
; 0000 0213 	}
;PCODE: $000003ED VOL: 0
; 0000 0214 else if(cmnd==0x33)
;PCODE: $000003EE VOL: 0
;PCODE: $000003EF VOL: 0
;PCODE: $000003F0 VOL: 0
;PCODE: $000003F1 VOL: 0
;PCODE: $000003F2 VOL: 0
; 0000 0215 	{
; 0000 0216 	if(mode1==mON)step1=sOFF;
;PCODE: $000003F3 VOL: 0
;PCODE: $000003F4 VOL: 0
;PCODE: $000003F5 VOL: 0
;PCODE: $000003F6 VOL: 0
;PCODE: $000003F7 VOL: 0
; 0000 0217 	if(mode2==mON)step2=sOFF;
;PCODE: $000003F8 VOL: 0
;PCODE: $000003F9 VOL: 0
;PCODE: $000003FA VOL: 0
;PCODE: $000003FB VOL: 0
;PCODE: $000003FC VOL: 0
;PCODE: $000003FD VOL: 0
; 0000 0218 	}
;PCODE: $000003FE VOL: 0
; 0000 0219 
; 0000 021A }
;PCODE: $000003FF VOL: 0
;PCODE: $00000400 VOL: 0
;PCODE: $00000401 VOL: 0
;PCODE: $00000402 VOL: 0
;
;//-----------------------------------------------
;void state_an(void)
; 0000 021E {
;PCODE: $00000403 VOL: 0
;PCODE: $00000404 VOL: 0
; 0000 021F #if(NUM_OF_SLAVE==1)
; 0000 0220 if(state&0x01)mode1=mON;
; 0000 0221 else mode1=mOFF;
; 0000 0222 if(state&0x02)mode2=mON;
; 0000 0223 else mode2=mOFF;
; 0000 0224 
; 0000 0225 #elif(NUM_OF_SLAVE==2)
; 0000 0226 if(state&0x04)mode1=mON;
; 0000 0227 else mode1=mOFF;
; 0000 0228 if(state&0x08)mode2=mON;
; 0000 0229 else mode2=mOFF;
; 0000 022A 
; 0000 022B #elif(NUM_OF_SLAVE==3)
; 0000 022C if(state&0x10)mode1=mON;
;PCODE: $00000405 VOL: 0
;PCODE: $00000406 VOL: 0
;PCODE: $00000407 VOL: 0
;PCODE: $00000408 VOL: 0
;PCODE: $00000409 VOL: 0
; 0000 022D else mode1=mOFF;
;PCODE: $0000040A VOL: 0
;PCODE: $0000040B VOL: 0
;PCODE: $0000040C VOL: 0
;PCODE: $0000040D VOL: 0
; 0000 022E if(state&0x20)mode2=mON;
;PCODE: $0000040E VOL: 0
;PCODE: $0000040F VOL: 0
;PCODE: $00000410 VOL: 0
;PCODE: $00000411 VOL: 0
;PCODE: $00000412 VOL: 0
;PCODE: $00000413 VOL: 0
; 0000 022F else mode2=mOFF;
;PCODE: $00000414 VOL: 0
;PCODE: $00000415 VOL: 0
;PCODE: $00000416 VOL: 0
;PCODE: $00000417 VOL: 0
; 0000 0230 #endif
; 0000 0231 }
;PCODE: $00000418 VOL: 0
;PCODE: $00000419 VOL: 0
;PCODE: $0000041A VOL: 0
;
;//-----------------------------------------------
;void uart_in_an(void)
; 0000 0235 {
;PCODE: $0000041B VOL: 0
;PCODE: $0000041C VOL: 0
; 0000 0236 if(rx_buffer[0]==NUM_OF_SLAVE)
;PCODE: $0000041D VOL: 0
;PCODE: $0000041E VOL: 0
;PCODE: $0000041F VOL: 0
; 0000 0237 	{
; 0000 0238 	char temp1,temp2,temp3,temp4;
; 0000 0239 
; 0000 023A 	temp1=NUM_OF_SLAVE;
;PCODE: $00000420 VOL: 0
;	temp1 -> Y+3
;	temp2 -> Y+2
;	temp3 -> Y+1
;	temp4 -> Y+0
;PCODE: $00000421 VOL: 0
;PCODE: $00000422 VOL: 0
; 0000 023B 	temp4=temp1;
;PCODE: $00000423 VOL: 0
;PCODE: $00000424 VOL: 0
; 0000 023C 
; 0000 023D 	temp2=0x80;
;PCODE: $00000425 VOL: 0
;PCODE: $00000426 VOL: 0
; 0000 023E 	if(bVR1)temp2|=(1<<0);
;PCODE: $00000427 VOL: 0
;PCODE: $00000428 VOL: 0
;PCODE: $00000429 VOL: 0
;PCODE: $0000042A VOL: 0
;PCODE: $0000042B VOL: 0
;PCODE: $0000042C VOL: 0
; 0000 023F 	if(bMD1)temp2|=(1<<1);
;PCODE: $0000042D VOL: 0
;PCODE: $0000042E VOL: 0
;PCODE: $0000042F VOL: 0
;PCODE: $00000430 VOL: 0
;PCODE: $00000431 VOL: 0
;PCODE: $00000432 VOL: 0
;PCODE: $00000433 VOL: 0
; 0000 0240 	if(step1!=sOFF)temp2|=(1<<2);
;PCODE: $00000434 VOL: 0
;PCODE: $00000435 VOL: 0
;PCODE: $00000436 VOL: 0
;PCODE: $00000437 VOL: 0
;PCODE: $00000438 VOL: 0
;PCODE: $00000439 VOL: 0
;PCODE: $0000043A VOL: 0
; 0000 0241 	if(bVR2)temp2|=(1<<3);
;PCODE: $0000043B VOL: 0
;PCODE: $0000043C VOL: 0
;PCODE: $0000043D VOL: 0
;PCODE: $0000043E VOL: 0
;PCODE: $0000043F VOL: 0
;PCODE: $00000440 VOL: 0
;PCODE: $00000441 VOL: 0
; 0000 0242 	if(bMD2)temp2|=(1<<4);
;PCODE: $00000442 VOL: 0
;PCODE: $00000443 VOL: 0
;PCODE: $00000444 VOL: 0
;PCODE: $00000445 VOL: 0
;PCODE: $00000446 VOL: 0
;PCODE: $00000447 VOL: 0
;PCODE: $00000448 VOL: 0
; 0000 0243 	if(step2!=sOFF)temp2|=(1<<5);
;PCODE: $00000449 VOL: 0
;PCODE: $0000044A VOL: 0
;PCODE: $0000044B VOL: 0
;PCODE: $0000044C VOL: 0
;PCODE: $0000044D VOL: 0
;PCODE: $0000044E VOL: 0
;PCODE: $0000044F VOL: 0
; 0000 0244 	//temp2=0xff;
; 0000 0245 
; 0000 0246 	temp4^=temp2;
;PCODE: $00000450 VOL: 0
;PCODE: $00000451 VOL: 0
;PCODE: $00000452 VOL: 0
;PCODE: $00000453 VOL: 0
;PCODE: $00000454 VOL: 0
; 0000 0247 
; 0000 0248 	temp3=0x80;
;PCODE: $00000455 VOL: 0
;PCODE: $00000456 VOL: 0
; 0000 0249 	temp4^=temp3;
;PCODE: $00000457 VOL: 0
;PCODE: $00000458 VOL: 0
;PCODE: $00000459 VOL: 0
;PCODE: $0000045A VOL: 0
; 0000 024A 
; 0000 024B 	temp4|=0x80;
;PCODE: $0000045B VOL: 0
;PCODE: $0000045C VOL: 0
;PCODE: $0000045D VOL: 0
; 0000 024C 
; 0000 024D 	out_usart(4,temp1,temp2,temp3,temp4,0,0,0,0,0);
;PCODE: $0000045E VOL: 0
;PCODE: $0000045F VOL: 0
;PCODE: $00000460 VOL: 0
;PCODE: $00000461 VOL: 0
;PCODE: $00000462 VOL: 0
;PCODE: $00000463 VOL: 0
;PCODE: $00000464 VOL: 0
;PCODE: $00000465 VOL: 0
;PCODE: $00000466 VOL: 0
;PCODE: $00000467 VOL: 0
;PCODE: $00000468 VOL: 0
;PCODE: $00000469 VOL: 0
;PCODE: $0000046A VOL: 0
;PCODE: $0000046B VOL: 0
;PCODE: $0000046C VOL: 0
;PCODE: $0000046D VOL: 0
;PCODE: $0000046E VOL: 0
;PCODE: $0000046F VOL: 0
;PCODE: $00000470 VOL: 0
;PCODE: $00000471 VOL: 0
; 0000 024E     //out_usart(4,1,2,3,0x55,0,0,0,0,0);
; 0000 024F 
; 0000 0250 	}
;PCODE: $00000472 VOL: 0
; 0000 0251 
; 0000 0252 cmnd_new=rx_buffer[1];
;PCODE: $00000473 VOL: 0
;PCODE: $00000474 VOL: 0
;PCODE: $00000475 VOL: 0
;PCODE: $00000476 VOL: 0
; 0000 0253 if(cmnd_new==cmnd_old)
;PCODE: $00000477 VOL: 0
;PCODE: $00000478 VOL: 0
;PCODE: $00000479 VOL: 0
;PCODE: $0000047A VOL: 0
; 0000 0254 	{
; 0000 0255 	if(cmnd_cnt<4)
;PCODE: $0000047B VOL: 0
;PCODE: $0000047C VOL: 0
;PCODE: $0000047D VOL: 0
; 0000 0256 		{
; 0000 0257 		cmnd_cnt++;
;PCODE: $0000047E VOL: 0
;PCODE: $0000047F VOL: 0
;PCODE: $00000480 VOL: 0
; 0000 0258 		if(cmnd_cnt>=4)
;PCODE: $00000481 VOL: 0
;PCODE: $00000482 VOL: 0
;PCODE: $00000483 VOL: 0
; 0000 0259 			{
; 0000 025A 			if((cmnd_new&0x7f)!=cmnd)
;PCODE: $00000484 VOL: 0
;PCODE: $00000485 VOL: 0
;PCODE: $00000486 VOL: 0
;PCODE: $00000487 VOL: 0
;PCODE: $00000488 VOL: 0
;PCODE: $00000489 VOL: 0
; 0000 025B 				{
; 0000 025C 				cmnd=cmnd_new&0x7f;
;PCODE: $0000048A VOL: 0
;PCODE: $0000048B VOL: 0
;PCODE: $0000048C VOL: 0
; 0000 025D 				cmnd_an();
;PCODE: $0000048D VOL: 0
; 0000 025E 				}
; 0000 025F 			}
;PCODE: $0000048E VOL: 0
; 0000 0260 		}
;PCODE: $0000048F VOL: 0
; 0000 0261 	}
;PCODE: $00000490 VOL: 0
; 0000 0262 else cmnd_cnt=0;
;PCODE: $00000491 VOL: 0
;PCODE: $00000492 VOL: 0
;PCODE: $00000493 VOL: 0
;PCODE: $00000494 VOL: 0
; 0000 0263 cmnd_old=cmnd_new;
;PCODE: $00000495 VOL: 0
;PCODE: $00000496 VOL: 0
;PCODE: $00000497 VOL: 0
; 0000 0264 
; 0000 0265 state_new=rx_buffer[2];
;PCODE: $00000498 VOL: 0
;PCODE: $00000499 VOL: 0
;PCODE: $0000049A VOL: 0
; 0000 0266 if(state_new==state_old)
;PCODE: $0000049B VOL: 0
;PCODE: $0000049C VOL: 0
;PCODE: $0000049D VOL: 0
;PCODE: $0000049E VOL: 0
; 0000 0267 	{
; 0000 0268 	if(state_cnt<4)
;PCODE: $0000049F VOL: 0
;PCODE: $000004A0 VOL: 0
;PCODE: $000004A1 VOL: 0
; 0000 0269 		{
; 0000 026A 		state_cnt++;
;PCODE: $000004A2 VOL: 0
;PCODE: $000004A3 VOL: 0
;PCODE: $000004A4 VOL: 0
; 0000 026B 		if(state_cnt>=4)
;PCODE: $000004A5 VOL: 0
;PCODE: $000004A6 VOL: 0
;PCODE: $000004A7 VOL: 0
; 0000 026C 			{
; 0000 026D 			if((state_new&0x7f)!=state)
;PCODE: $000004A8 VOL: 0
;PCODE: $000004A9 VOL: 0
;PCODE: $000004AA VOL: 0
;PCODE: $000004AB VOL: 0
;PCODE: $000004AC VOL: 0
;PCODE: $000004AD VOL: 0
; 0000 026E 				{
; 0000 026F 				state=state_new&0x7f;
;PCODE: $000004AE VOL: 0
;PCODE: $000004AF VOL: 0
;PCODE: $000004B0 VOL: 0
; 0000 0270 				state_an();
;PCODE: $000004B1 VOL: 0
; 0000 0271 				}
; 0000 0272 			}
;PCODE: $000004B2 VOL: 0
; 0000 0273 		}
;PCODE: $000004B3 VOL: 0
; 0000 0274 	}
;PCODE: $000004B4 VOL: 0
; 0000 0275 else state_cnt=0;
;PCODE: $000004B5 VOL: 0
;PCODE: $000004B6 VOL: 0
;PCODE: $000004B7 VOL: 0
;PCODE: $000004B8 VOL: 0
; 0000 0276 state_old=state_new;
;PCODE: $000004B9 VOL: 0
;PCODE: $000004BA VOL: 0
;PCODE: $000004BB VOL: 0
; 0000 0277 
; 0000 0278 /*state=rx_buffer[2];
; 0000 0279 state_an();*/
; 0000 027A 
; 0000 027B }
;PCODE: $000004BC VOL: 0
;PCODE: $000004BD VOL: 0
;
;//-----------------------------------------------
;void mathemat(void)
; 0000 027F {
;PCODE: $000004BE VOL: 0
;PCODE: $000004BF VOL: 0
; 0000 0280 timer1_delay=ee_timer1_delay*31;
;PCODE: $000004C0 VOL: 0
;PCODE: $000004C1 VOL: 0
;PCODE: $000004C2 VOL: 0
;PCODE: $000004C3 VOL: 0
;PCODE: $000004C4 VOL: 0
; 0000 0281 }
;PCODE: $000004C5 VOL: 0
;PCODE: $000004C6 VOL: 0
;
;
;//-----------------------------------------------
;void led_hndl(void)
; 0000 0286 {
;PCODE: $000004C7 VOL: 0
;PCODE: $000004C8 VOL: 0
; 0000 0287 
; 0000 0288 }
;PCODE: $000004C9 VOL: 0
;PCODE: $000004CA VOL: 0
;
;//-----------------------------------------------
;// Подпрограмма драйва до 7 кнопок одного порта,
;// различает короткое и длинное нажатие,
;// срабатывает на отпускание кнопки, возможность
;// ускорения перебора при длинном нажатии...
;#define but_port PORTC
;#define but_dir  DDRC
;#define but_pin  PINC
;#define but_mask 0b01101010
;#define no_but   0b11111111
;#define but_on   5
;#define but_onL  20
;
;
;
;
;void but_drv(void)
; 0000 029B {
;PCODE: $000004CB VOL: 0
;PCODE: $000004CC VOL: 0
; 0000 029C DDRD&=0b00000111;
;PCODE: $000004CD VOL: 0
;PCODE: $000004CE VOL: 0
;PCODE: $000004CF VOL: 0
; 0000 029D PORTD|=0b11111000;
;PCODE: $000004D0 VOL: 0
;PCODE: $000004D1 VOL: 0
;PCODE: $000004D2 VOL: 0
; 0000 029E 
; 0000 029F but_port|=(but_mask^0xff);
;PCODE: $000004D3 VOL: 0
;PCODE: $000004D4 VOL: 0
;PCODE: $000004D5 VOL: 0
; 0000 02A0 but_dir&=but_mask;
;PCODE: $000004D6 VOL: 0
;PCODE: $000004D7 VOL: 0
;PCODE: $000004D8 VOL: 0
; 0000 02A1 #asm
;PCODE: $000004D9 VOL: 0
; 0000 02A2 nop
nop
;PCODE: $000004DA VOL: 0
; 0000 02A3 nop
nop
;PCODE: $000004DB VOL: 0
; 0000 02A4 nop
nop
;PCODE: $000004DC VOL: 0
; 0000 02A5 nop
nop
;PCODE: $000004DD VOL: 0
; 0000 02A6 nop
nop
;PCODE: $000004DE VOL: 0
; 0000 02A7 nop
nop
;PCODE: $000004DF VOL: 0
; 0000 02A8 nop
nop
;PCODE: $000004E0 VOL: 0
; 0000 02A9 

;PCODE: $000004E1 VOL: 0
; 0000 02AA 

;PCODE: $000004E2 VOL: 0
;PCODE: $000004E3 VOL: 0
; 0000 02AB #endasm
; 0000 02AC 
; 0000 02AD but_n=but_pin|but_mask;
;PCODE: $000004E4 VOL: 0
;PCODE: $000004E5 VOL: 0
;PCODE: $000004E6 VOL: 0
; 0000 02AE 
; 0000 02AF if((but_n==no_but)||(but_n!=but_s))
;PCODE: $000004E7 VOL: 0
;PCODE: $000004E8 VOL: 0
;PCODE: $000004E9 VOL: 0
;PCODE: $000004EA VOL: 0
;PCODE: $000004EB VOL: 0
;PCODE: $000004EC VOL: 0
;PCODE: $000004ED VOL: 0
;PCODE: $000004EE VOL: 0
;PCODE: $000004EF VOL: 0
; 0000 02B0  	{
; 0000 02B1  	speed=0;
;PCODE: $000004F0 VOL: 0
;PCODE: $000004F1 VOL: 0
;PCODE: $000004F2 VOL: 0
; 0000 02B2    	if (((but0_cnt>=but_on)||(but1_cnt!=0))&&(!l_but))
;PCODE: $000004F3 VOL: 0
;PCODE: $000004F4 VOL: 0
;PCODE: $000004F5 VOL: 0
;PCODE: $000004F6 VOL: 0
;PCODE: $000004F7 VOL: 0
;PCODE: $000004F8 VOL: 0
;PCODE: $000004F9 VOL: 0
;PCODE: $000004FA VOL: 0
;PCODE: $000004FB VOL: 0
;PCODE: $000004FC VOL: 0
;PCODE: $000004FD VOL: 0
;PCODE: $000004FE VOL: 0
;PCODE: $000004FF VOL: 0
;PCODE: $00000500 VOL: 0
;PCODE: $00000501 VOL: 0
; 0000 02B3   		{
; 0000 02B4    	     n_but=1;
;PCODE: $00000502 VOL: 0
;PCODE: $00000503 VOL: 0
;PCODE: $00000504 VOL: 0
; 0000 02B5           but=but_s;
;PCODE: $00000505 VOL: 0
;PCODE: $00000506 VOL: 0
; 0000 02B6           }
; 0000 02B7    	if (but1_cnt>=but_onL_temp)
;PCODE: $00000507 VOL: 0
;PCODE: $00000508 VOL: 0
;PCODE: $00000509 VOL: 0
;PCODE: $0000050A VOL: 0
;PCODE: $0000050B VOL: 0
; 0000 02B8   		{
; 0000 02B9    	     n_but=1;
;PCODE: $0000050C VOL: 0
;PCODE: $0000050D VOL: 0
;PCODE: $0000050E VOL: 0
; 0000 02BA           but=but_s&0b11111101;
;PCODE: $0000050F VOL: 0
;PCODE: $00000510 VOL: 0
;PCODE: $00000511 VOL: 0
; 0000 02BB           }
; 0000 02BC     	l_but=0;
;PCODE: $00000512 VOL: 0
;PCODE: $00000513 VOL: 0
;PCODE: $00000514 VOL: 0
;PCODE: $00000515 VOL: 0
; 0000 02BD    	but_onL_temp=but_onL;
;PCODE: $00000516 VOL: 0
;PCODE: $00000517 VOL: 0
; 0000 02BE     	but0_cnt=0;
;PCODE: $00000518 VOL: 0
;PCODE: $00000519 VOL: 0
; 0000 02BF   	but1_cnt=0;
;PCODE: $0000051A VOL: 0
;PCODE: $0000051B VOL: 0
; 0000 02C0      goto but_drv_out;
;PCODE: $0000051C VOL: 0
; 0000 02C1   	}
; 0000 02C2 
; 0000 02C3 if(but_n==but_s)
;PCODE: $0000051D VOL: 0
;PCODE: $0000051E VOL: 0
;PCODE: $0000051F VOL: 0
;PCODE: $00000520 VOL: 0
;PCODE: $00000521 VOL: 0
; 0000 02C4  	{
; 0000 02C5   	but0_cnt++;
;PCODE: $00000522 VOL: 0
;PCODE: $00000523 VOL: 0
;PCODE: $00000524 VOL: 0
; 0000 02C6   	if(but0_cnt>=but_on)
;PCODE: $00000525 VOL: 0
;PCODE: $00000526 VOL: 0
;PCODE: $00000527 VOL: 0
; 0000 02C7   		{
; 0000 02C8    		but0_cnt=0;
;PCODE: $00000528 VOL: 0
;PCODE: $00000529 VOL: 0
; 0000 02C9    		but1_cnt++;
;PCODE: $0000052A VOL: 0
;PCODE: $0000052B VOL: 0
;PCODE: $0000052C VOL: 0
; 0000 02CA    		if(but1_cnt>=but_onL_temp)
;PCODE: $0000052D VOL: 0
;PCODE: $0000052E VOL: 0
;PCODE: $0000052F VOL: 0
;PCODE: $00000530 VOL: 0
; 0000 02CB    			{
; 0000 02CC     			but=but_s&0b11111101;
;PCODE: $00000531 VOL: 0
;PCODE: $00000532 VOL: 0
;PCODE: $00000533 VOL: 0
; 0000 02CD     			but1_cnt=0;
;PCODE: $00000534 VOL: 0
;PCODE: $00000535 VOL: 0
; 0000 02CE     			n_but=1;
;PCODE: $00000536 VOL: 0
;PCODE: $00000537 VOL: 0
;PCODE: $00000538 VOL: 0
; 0000 02CF     			l_but=1;
;PCODE: $00000539 VOL: 0
;PCODE: $0000053A VOL: 0
;PCODE: $0000053B VOL: 0
; 0000 02D0 			if(speed)
;PCODE: $0000053C VOL: 0
;PCODE: $0000053D VOL: 0
;PCODE: $0000053E VOL: 0
; 0000 02D1 				{
; 0000 02D2     				but_onL_temp=but_onL_temp>>1;
;PCODE: $0000053F VOL: 0
;PCODE: $00000540 VOL: 0
;PCODE: $00000541 VOL: 0
; 0000 02D3         			if(but_onL_temp<=2) but_onL_temp=2;
;PCODE: $00000542 VOL: 0
;PCODE: $00000543 VOL: 0
;PCODE: $00000544 VOL: 0
;PCODE: $00000545 VOL: 0
;PCODE: $00000546 VOL: 0
; 0000 02D4 				}
;PCODE: $00000547 VOL: 0
; 0000 02D5    			}
;PCODE: $00000548 VOL: 0
; 0000 02D6   		}
;PCODE: $00000549 VOL: 0
; 0000 02D7  	}
;PCODE: $0000054A VOL: 0
; 0000 02D8 but_drv_out:
;PCODE: $0000054B VOL: 0
;PCODE: $0000054C VOL: 0
; 0000 02D9 but_s=but_n;
;PCODE: $0000054D VOL: 0
;PCODE: $0000054E VOL: 0
; 0000 02DA but_port|=(but_mask^0xff);
;PCODE: $0000054F VOL: 0
;PCODE: $00000550 VOL: 0
;PCODE: $00000551 VOL: 0
; 0000 02DB but_dir&=but_mask;
;PCODE: $00000552 VOL: 0
;PCODE: $00000553 VOL: 0
;PCODE: $00000554 VOL: 0
; 0000 02DC }
;PCODE: $00000555 VOL: 0
;PCODE: $00000556 VOL: 0
;
;#define butA	239
;#define butA_	237
;#define butP	251
;#define butP_	249
;#define butR	127
;#define butR_	125
;#define butL	254
;#define butL_	252
;#define butLR	126
;#define butLR_	124
;
;
;
;
;//***********************************************
;//***********************************************
;//***********************************************
;//***********************************************
;interrupt [TIM0_OVF] void timer0_ovf_isr(void)
; 0000 02F1 {
;PCODE: $00000557 VOL: 0
;PCODE: $00000558 VOL: 0
; 0000 02F2 TCCR0=0x05;
;PCODE: $00000559 VOL: 0
;PCODE: $0000055A VOL: 0
; 0000 02F3 TCNT0=-78;
;PCODE: $0000055B VOL: 0
;PCODE: $0000055C VOL: 0
; 0000 02F4 OCR0=0x00;
;PCODE: $0000055D VOL: 0
;PCODE: $0000055E VOL: 0
; 0000 02F5 
; 0000 02F6 b100Hz=1;
;PCODE: $0000055F VOL: 0
;PCODE: $00000560 VOL: 0
;PCODE: $00000561 VOL: 0
; 0000 02F7 
; 0000 02F8 if(++t0_cnt1>=10)
;PCODE: $00000562 VOL: 0
;PCODE: $00000563 VOL: 0
;PCODE: $00000564 VOL: 0
;PCODE: $00000565 VOL: 0
; 0000 02F9 	{
; 0000 02FA 	t0_cnt1=0;
;PCODE: $00000566 VOL: 0
; 0000 02FB 	b10Hz=1;
;PCODE: $00000567 VOL: 0
;PCODE: $00000568 VOL: 0
;PCODE: $00000569 VOL: 0
; 0000 02FC 
; 0000 02FD 	if(++t0_cnt2>=2)
;PCODE: $0000056A VOL: 0
;PCODE: $0000056B VOL: 0
;PCODE: $0000056C VOL: 0
;PCODE: $0000056D VOL: 0
; 0000 02FE 		{
; 0000 02FF 		t0_cnt2=0;
;PCODE: $0000056E VOL: 0
; 0000 0300 		bFL5=!bFL5;
;PCODE: $0000056F VOL: 0
;PCODE: $00000570 VOL: 0
;PCODE: $00000571 VOL: 0
; 0000 0301 		}
; 0000 0302 
; 0000 0303 	if(++t0_cnt3>=5)
;PCODE: $00000572 VOL: 0
;PCODE: $00000573 VOL: 0
;PCODE: $00000574 VOL: 0
;PCODE: $00000575 VOL: 0
;PCODE: $00000576 VOL: 0
; 0000 0304 		{
; 0000 0305 		t0_cnt3=0;
;PCODE: $00000577 VOL: 0
; 0000 0306 		bFL2=!bFL2;
;PCODE: $00000578 VOL: 0
;PCODE: $00000579 VOL: 0
;PCODE: $0000057A VOL: 0
; 0000 0307 		}
; 0000 0308 	}
;PCODE: $0000057B VOL: 0
; 0000 0309 }
;PCODE: $0000057C VOL: 0
;PCODE: $0000057D VOL: 0
;PCODE: $0000057E VOL: 0
;PCODE: $0000057F VOL: 0
;
;//***********************************************
;// Timer 1 output compare A interrupt service routine
;interrupt [TIM1_COMPA] void timer1_compa_isr(void)
; 0000 030E {
;PCODE: $00000580 VOL: 0
;PCODE: $00000581 VOL: 0
; 0000 030F 
; 0000 0310 }
;PCODE: $00000582 VOL: 0
;PCODE: $00000583 VOL: 0
;PCODE: $00000584 VOL: 0
;
;
;//===============================================
;//===============================================
;//===============================================
;//===============================================
;
;void main(void)
; 0000 0319 {
;PCODE: $00000585 VOL: 0
; 0000 031A 
; 0000 031B PORTA=0xff;
;PCODE: $00000586 VOL: 0
;PCODE: $00000587 VOL: 0
; 0000 031C DDRA=0x00;
;PCODE: $00000588 VOL: 0
;PCODE: $00000589 VOL: 0
; 0000 031D 
; 0000 031E PORTB=0x00;
;PCODE: $0000058A VOL: 0
;PCODE: $0000058B VOL: 0
; 0000 031F DDRB=0xFF;
;PCODE: $0000058C VOL: 0
;PCODE: $0000058D VOL: 0
; 0000 0320 
; 0000 0321 PORTC=0x00;
;PCODE: $0000058E VOL: 0
;PCODE: $0000058F VOL: 0
; 0000 0322 DDRC=0x00;
;PCODE: $00000590 VOL: 0
;PCODE: $00000591 VOL: 0
; 0000 0323 
; 0000 0324 
; 0000 0325 PORTD=0x00;
;PCODE: $00000592 VOL: 0
;PCODE: $00000593 VOL: 0
; 0000 0326 DDRD=0x00;
;PCODE: $00000594 VOL: 0
;PCODE: $00000595 VOL: 0
; 0000 0327 
; 0000 0328 
; 0000 0329 TCCR0=0x02;
;PCODE: $00000596 VOL: 0
;PCODE: $00000597 VOL: 0
; 0000 032A TCNT0=-99;
;PCODE: $00000598 VOL: 0
;PCODE: $00000599 VOL: 0
; 0000 032B OCR0=0x00;
;PCODE: $0000059A VOL: 0
;PCODE: $0000059B VOL: 0
; 0000 032C 
; 0000 032D TCCR1A=0x00;
;PCODE: $0000059C VOL: 0
;PCODE: $0000059D VOL: 0
; 0000 032E TCCR1B=0x00;
;PCODE: $0000059E VOL: 0
;PCODE: $0000059F VOL: 0
; 0000 032F TCNT1H=0x00;
;PCODE: $000005A0 VOL: 0
;PCODE: $000005A1 VOL: 0
; 0000 0330 TCNT1L=0x00;
;PCODE: $000005A2 VOL: 0
;PCODE: $000005A3 VOL: 0
; 0000 0331 ICR1H=0x00;
;PCODE: $000005A4 VOL: 0
;PCODE: $000005A5 VOL: 0
; 0000 0332 ICR1L=0x00;
;PCODE: $000005A6 VOL: 0
;PCODE: $000005A7 VOL: 0
; 0000 0333 OCR1AH=0x00;
;PCODE: $000005A8 VOL: 0
;PCODE: $000005A9 VOL: 0
; 0000 0334 OCR1AL=0x00;
;PCODE: $000005AA VOL: 0
;PCODE: $000005AB VOL: 0
; 0000 0335 OCR1BH=0x00;
;PCODE: $000005AC VOL: 0
;PCODE: $000005AD VOL: 0
; 0000 0336 OCR1BL=0x00;
;PCODE: $000005AE VOL: 0
;PCODE: $000005AF VOL: 0
; 0000 0337 
; 0000 0338 
; 0000 0339 ASSR=0x00;
;PCODE: $000005B0 VOL: 0
;PCODE: $000005B1 VOL: 0
; 0000 033A TCCR2=0x00;
;PCODE: $000005B2 VOL: 0
;PCODE: $000005B3 VOL: 0
; 0000 033B TCNT2=0x00;
;PCODE: $000005B4 VOL: 0
;PCODE: $000005B5 VOL: 0
; 0000 033C OCR2=0x00;
;PCODE: $000005B6 VOL: 0
;PCODE: $000005B7 VOL: 0
; 0000 033D 
; 0000 033E // USART initialization
; 0000 033F // Communication Parameters: 8 Data, 1 Stop, No Parity
; 0000 0340 // USART Receiver: On
; 0000 0341 // USART Transmitter: On
; 0000 0342 // USART Mode: Asynchronous
; 0000 0343 // USART Baud rate: 19200
; 0000 0344 UCSRA=0x00;
;PCODE: $000005B8 VOL: 0
;PCODE: $000005B9 VOL: 0
; 0000 0345 UCSRB=0xD8;
;PCODE: $000005BA VOL: 0
;PCODE: $000005BB VOL: 0
; 0000 0346 UCSRC=0x86;
;PCODE: $000005BC VOL: 0
;PCODE: $000005BD VOL: 0
; 0000 0347 UBRRH=0x00;
;PCODE: $000005BE VOL: 0
;PCODE: $000005BF VOL: 0
; 0000 0348 UBRRL=0x19;
;PCODE: $000005C0 VOL: 0
;PCODE: $000005C1 VOL: 0
; 0000 0349 
; 0000 034A MCUCR=0x00;
;PCODE: $000005C2 VOL: 0
;PCODE: $000005C3 VOL: 0
; 0000 034B MCUCSR=0x00;
;PCODE: $000005C4 VOL: 0
;PCODE: $000005C5 VOL: 0
; 0000 034C 
; 0000 034D TIMSK=0x01;
;PCODE: $000005C6 VOL: 0
;PCODE: $000005C7 VOL: 0
; 0000 034E 
; 0000 034F ACSR=0x80;
;PCODE: $000005C8 VOL: 0
;PCODE: $000005C9 VOL: 0
; 0000 0350 SFIOR=0x00;
;PCODE: $000005CA VOL: 0
;PCODE: $000005CB VOL: 0
; 0000 0351 
; 0000 0352 #asm("sei")
;PCODE: $000005CC VOL: 0
	sei
;PCODE: $000005CD VOL: 0
; 0000 0353 led_hndl();
;PCODE: $000005CE VOL: 0
; 0000 0354 ch_on[0]=coON;
;PCODE: $000005CF VOL: 0
;PCODE: $000005D0 VOL: 0
;PCODE: $000005D1 VOL: 0
; 0000 0355 //ee_avtom_mode=eamOFF;
; 0000 0356 //ind=iSet_delay;
; 0000 0357 while (1)
;PCODE: $000005D2 VOL: 0
; 0000 0358       {
; 0000 0359       if(b600Hz)
;PCODE: $000005D3 VOL: 0
;PCODE: $000005D4 VOL: 0
;PCODE: $000005D5 VOL: 0
; 0000 035A 		{
; 0000 035B 		b600Hz=0;
;PCODE: $000005D6 VOL: 0
;PCODE: $000005D7 VOL: 0
;PCODE: $000005D8 VOL: 0
; 0000 035C 
; 0000 035D 		}
; 0000 035E       if(b100Hz)
;PCODE: $000005D9 VOL: 0
;PCODE: $000005DA VOL: 0
;PCODE: $000005DB VOL: 0
;PCODE: $000005DC VOL: 0
; 0000 035F 		{
; 0000 0360 		b100Hz=0;
;PCODE: $000005DD VOL: 0
;PCODE: $000005DE VOL: 0
;PCODE: $000005DF VOL: 0
; 0000 0361 
; 0000 0362           in_drv();
;PCODE: $000005E0 VOL: 0
; 0000 0363           mdvr_drv();
;PCODE: $000005E1 VOL: 0
; 0000 0364           step1_contr();
;PCODE: $000005E2 VOL: 0
; 0000 0365 		step2_contr();
;PCODE: $000005E3 VOL: 0
; 0000 0366           out_drv();
;PCODE: $000005E4 VOL: 0
; 0000 0367     		}
; 0000 0368 	if(b10Hz)
;PCODE: $000005E5 VOL: 0
;PCODE: $000005E6 VOL: 0
;PCODE: $000005E7 VOL: 0
;PCODE: $000005E8 VOL: 0
; 0000 0369 		{
; 0000 036A 		b10Hz=0;
;PCODE: $000005E9 VOL: 0
;PCODE: $000005EA VOL: 0
;PCODE: $000005EB VOL: 0
; 0000 036B 
; 0000 036C 
; 0000 036D 
; 0000 036E 
; 0000 036F           led_hndl();
;PCODE: $000005EC VOL: 0
; 0000 0370           mathemat();
;PCODE: $000005ED VOL: 0
; 0000 0371           DDRD.2=1;
;PCODE: $000005EE VOL: 0
;PCODE: $000005EF VOL: 0
; 0000 0372           if(step2!=sOFF) PORTD.2=0;
;PCODE: $000005F0 VOL: 0
;PCODE: $000005F1 VOL: 0
;PCODE: $000005F2 VOL: 0
;PCODE: $000005F3 VOL: 0
;PCODE: $000005F4 VOL: 0
; 0000 0373           else PORTD.2=1;
;PCODE: $000005F5 VOL: 0
;PCODE: $000005F6 VOL: 0
;PCODE: $000005F7 VOL: 0
;PCODE: $000005F8 VOL: 0
; 0000 0374           }
;PCODE: $000005F9 VOL: 0
; 0000 0375 
; 0000 0376       };
;PCODE: $000005FA VOL: 0
;PCODE: $000005FB VOL: 0
;PCODE: $000005FC VOL: 0
; 0000 0377 }
;PCODE: $000005FD VOL: 0
;PCODE: $000005FE VOL: 0
;PCODE: $000005FF VOL: 0
;
;
;
;
